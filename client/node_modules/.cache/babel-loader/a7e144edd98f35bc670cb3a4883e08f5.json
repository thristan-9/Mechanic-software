{"ast":null,"code":"import { useCallback, useState } from \"react\";\n/**\n * This is a simple hook that will allow you to \"strongly\" type a `Select`\n * component's value since the `onChange` handler only returns a `string`.\n *\n * @param defaultValue - The default value to use\n * @returns an ordered list containing the current value followed by the\n * dispatch function to update the state.\n */\n\nexport function useSelectState(defaultValue) {\n  var _a = useState(defaultValue),\n      value = _a[0],\n      setValue = _a[1];\n\n  var setTypedValue = useCallback(function (nextValue) {\n    setValue(nextValue);\n  }, []);\n  return [value, setTypedValue];\n}","map":{"version":3,"sources":["../src/useSelectState.ts"],"names":[],"mappings":"AAAA,SAAS,WAAT,EAAsB,QAAtB,QAAsC,OAAtC;AAKA;;;;;;;AAOG;;AACH,OAAM,SAAU,cAAV,CACJ,YADI,EACyB;AAEvB,MAAA,EAAA,GAAoB,QAAQ,CAAI,YAAJ,CAA5B;AAAA,MAAC,KAAK,GAAA,EAAA,CAAA,CAAA,CAAN;AAAA,MAAQ,QAAQ,GAAA,EAAA,CAAA,CAAA,CAAhB;;AACN,MAAM,aAAa,GAAG,WAAW,CAAC,UAAC,SAAD,EAAkB;AAClD,IAAA,QAAQ,CAAC,SAAD,CAAR;AACD,GAFgC,EAE9B,EAF8B,CAAjC;AAIA,SAAO,CAAC,KAAD,EAAQ,aAAR,CAAP;AACD","sourceRoot":"","sourcesContent":["import { useCallback, useState } from \"react\";\n/**\n * This is a simple hook that will allow you to \"strongly\" type a `Select`\n * component's value since the `onChange` handler only returns a `string`.\n *\n * @param defaultValue - The default value to use\n * @returns an ordered list containing the current value followed by the\n * dispatch function to update the state.\n */\nexport function useSelectState(defaultValue) {\n    var _a = useState(defaultValue), value = _a[0], setValue = _a[1];\n    var setTypedValue = useCallback(function (nextValue) {\n        setValue(nextValue);\n    }, []);\n    return [value, setTypedValue];\n}\n//# sourceMappingURL=useSelectState.js.map"]},"metadata":{},"sourceType":"module"}