{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { CircularProgress, getProgressA11y } from \"@react-md/progress\";\nimport { Switch } from \"./Switch\"; // this is used while the loading state is enabled to \"disable\" the switch\n// toggle. If we disable the entire switch, keyboard focus is lost which is not\n// desired.\n\nvar noop = function () {// do nothing\n};\n/**\n * This component will create an async switch that will show a loading indicator\n * and prevent the switch from being toggled while the loading state is true.\n */\n\n\nexport var AsyncSwitch = forwardRef(function AsyncSwitch(_a, ref) {\n  var id = _a.id,\n      disabled = _a.disabled,\n      className = _a.className,\n      progressStyle = _a.progressStyle,\n      progressClassName = _a.progressClassName,\n      loading = _a.loading,\n      onChange = _a.onChange,\n      props = __rest(_a, [\"id\", \"disabled\", \"className\", \"progressStyle\", \"progressClassName\", \"loading\", \"onChange\"]);\n\n  var progressId = id + \"-loading\";\n  return React.createElement(Switch, __assign({}, props, getProgressA11y(progressId, loading), {\n    id: id,\n    ref: ref,\n    disabled: disabled,\n    className: cn(\"rmd-switch--async\", className),\n    labelDisabled: disabled || false,\n    onChange: loading ? noop : onChange\n  }), loading && React.createElement(CircularProgress, {\n    id: progressId,\n    style: progressStyle,\n    className: cn(\"rmd-switch__progress\", progressClassName),\n    centered: false\n  }));\n});\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV === \"production\") {\n  try {\n    var PropTypes = require(\"prop-types\");\n\n    AsyncSwitch.propTypes = {\n      id: PropTypes.string.isRequired,\n      className: PropTypes.string,\n      onChange: PropTypes.func,\n      disabled: PropTypes.bool,\n      loading: PropTypes.bool.isRequired,\n      progressStyle: PropTypes.object,\n      progressClassName: PropTypes.string\n    };\n  } catch (e) {}\n}","map":{"version":3,"sources":["../../src/toggle/AsyncSwitch.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,IAA+B,UAA/B,QAAiD,OAAjD;AACA,OAAO,EAAP,MAAe,YAAf;AACA,SAAS,gBAAT,EAA2B,eAA3B,QAAkD,oBAAlD;AAEA,SAAS,MAAT,QAAoC,UAApC,C,CAuBA;AACA;AACA;;AACA,IAAM,IAAI,GAAG,YAAA,CACX;AACD,CAFD;AAIA;;;AAGG;;;AACH,OAAO,IAAM,WAAW,GAAG,UAAU,CACnC,SAAS,WAAT,CACE,EADF,EAWE,GAXF,EAWK;AATD,MAAA,EAAE,GAAA,EAAA,CAAA,EAAF;AAAA,MACA,QAAQ,GAAA,EAAA,CAAA,QADR;AAAA,MAEA,SAAS,GAAA,EAAA,CAAA,SAFT;AAAA,MAGA,aAAa,GAAA,EAAA,CAAA,aAHb;AAAA,MAIA,iBAAiB,GAAA,EAAA,CAAA,iBAJjB;AAAA,MAKA,OAAO,GAAA,EAAA,CAAA,OALP;AAAA,MAMA,QAAQ,GAAA,EAAA,CAAA,QANR;AAAA,MAOG,KAAK,GAAA,MAAA,CAAA,EAAA,EARV,CAAA,IAAA,EAAA,UAAA,EAAA,WAAA,EAAA,eAAA,EAAA,mBAAA,EAAA,SAAA,EAAA,UAAA,CAQU,CAPR;;AAWF,MAAM,UAAU,GAAM,EAAE,GAAA,UAAxB;AACA,SACE,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO,QAAA,CAAA,EAAA,EACD,KADC,EAED,eAAe,CAAC,UAAD,EAAa,OAAb,CAFd,EAEmC;AACxC,IAAA,EAAE,EAAE,EADoC;AAExC,IAAA,GAAG,EAAE,GAFmC;AAGxC,IAAA,QAAQ,EAAE,QAH8B;AAIxC,IAAA,SAAS,EAAE,EAAE,CAAC,mBAAD,EAAsB,SAAtB,CAJ2B;AAKxC,IAAA,aAAa,EAAE,QAAQ,IAAI,KALa;AAMxC,IAAA,QAAQ,EAAE,OAAO,GAAG,IAAH,GAAU;AANa,GAFnC,CAAP,EAUG,OAAO,IACN,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAiB;AACf,IAAA,EAAE,EAAE,UADW;AAEf,IAAA,KAAK,EAAE,aAFQ;AAGf,IAAA,SAAS,EAAE,EAAE,CAAC,sBAAD,EAAyB,iBAAzB,CAHE;AAIf,IAAA,QAAQ,EAAE;AAJK,GAAjB,CAXJ,CADF;AAqBD,CApCkC,CAA9B;AAuCP;;AACA,IAAI,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,MAAI;AACF,QAAM,SAAS,GAAG,OAAO,CAAC,YAAD,CAAzB;;AAEA,IAAA,WAAW,CAAC,SAAZ,GAAwB;AACtB,MAAA,EAAE,EAAE,SAAS,CAAC,MAAV,CAAiB,UADC;AAEtB,MAAA,SAAS,EAAE,SAAS,CAAC,MAFC;AAGtB,MAAA,QAAQ,EAAE,SAAS,CAAC,IAHE;AAItB,MAAA,QAAQ,EAAE,SAAS,CAAC,IAJE;AAKtB,MAAA,OAAO,EAAE,SAAS,CAAC,IAAV,CAAe,UALF;AAMtB,MAAA,aAAa,EAAE,SAAS,CAAC,MANH;AAOtB,MAAA,iBAAiB,EAAE,SAAS,CAAC;AAPP,KAAxB;AASD,GAZD,CAYE,OAAO,CAAP,EAAU,CAAE;AACf","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { CircularProgress, getProgressA11y } from \"@react-md/progress\";\nimport { Switch } from \"./Switch\";\n// this is used while the loading state is enabled to \"disable\" the switch\n// toggle. If we disable the entire switch, keyboard focus is lost which is not\n// desired.\nvar noop = function () {\n    // do nothing\n};\n/**\n * This component will create an async switch that will show a loading indicator\n * and prevent the switch from being toggled while the loading state is true.\n */\nexport var AsyncSwitch = forwardRef(function AsyncSwitch(_a, ref) {\n    var id = _a.id, disabled = _a.disabled, className = _a.className, progressStyle = _a.progressStyle, progressClassName = _a.progressClassName, loading = _a.loading, onChange = _a.onChange, props = __rest(_a, [\"id\", \"disabled\", \"className\", \"progressStyle\", \"progressClassName\", \"loading\", \"onChange\"]);\n    var progressId = id + \"-loading\";\n    return (React.createElement(Switch, __assign({}, props, getProgressA11y(progressId, loading), { id: id, ref: ref, disabled: disabled, className: cn(\"rmd-switch--async\", className), labelDisabled: disabled || false, onChange: loading ? noop : onChange }), loading && (React.createElement(CircularProgress, { id: progressId, style: progressStyle, className: cn(\"rmd-switch__progress\", progressClassName), centered: false }))));\n});\n/* istanbul ignore next */\nif (process.env.NODE_ENV === \"production\") {\n    try {\n        var PropTypes = require(\"prop-types\");\n        AsyncSwitch.propTypes = {\n            id: PropTypes.string.isRequired,\n            className: PropTypes.string,\n            onChange: PropTypes.func,\n            disabled: PropTypes.bool,\n            loading: PropTypes.bool.isRequired,\n            progressStyle: PropTypes.object,\n            progressClassName: PropTypes.string,\n        };\n    }\n    catch (e) { }\n}\n//# sourceMappingURL=AsyncSwitch.js.map"]},"metadata":{},"sourceType":"module"}