{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { forwardRef } from \"react\";\nimport { FormMessageContainer } from \"../FormMessageContainer\";\nimport { TextField } from \"./TextField\";\n/**\n * This component is a simple wrapper for the `TextField` and `FormMessage`\n * components that should be used along with the `useTextField` hook to\n * conditionally show help and error messages with a `TextField`.\n *\n * Simple example:\n *\n * ```ts\n * const [value, fieldProps] = useTextField({\n *   id: \"field-id\",\n * });\n *\n * return (\n *   <TextFieldWithMessage\n *     label=\"Label\"\n *     placeholder=\"Placeholder\"\n *     {...fieldProps}\n *   />\n * );\n * ```\n *\n * @remarks \\@since 2.5.0\n */\n\nexport var TextFieldWithMessage = forwardRef(function TextFieldWithMessage(_a, ref) {\n  var messageProps = _a.messageProps,\n      messageContainerProps = _a.messageContainerProps,\n      props = __rest(_a, [\"messageProps\", \"messageContainerProps\"]);\n\n  return React.createElement(FormMessageContainer, __assign({}, messageContainerProps, {\n    messageProps: messageProps\n  }), React.createElement(TextField, __assign({}, props, {\n    ref: ref\n  })));\n});","map":{"version":3,"sources":["../../src/text-field/TextFieldWithMessage.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,IAAgB,UAAhB,QAAgD,OAAhD;AAEA,SAEE,oBAFF,QAGO,yBAHP;AAIA,SAAS,SAAT,QAA0C,aAA1C;AAOA;;;;;;;;;;;;;;;;;;;;;;AAsBG;;AACH,OAAO,IAAM,oBAAoB,GAAG,UAAU,CAG5C,SAAS,oBAAT,CACA,EADA,EAEA,GAFA,EAEG;AADD,MAAA,YAAY,GAAA,EAAA,CAAA,YAAZ;AAAA,MAAc,qBAAqB,GAAA,EAAA,CAAA,qBAAnC;AAAA,MAAwC,KAAK,GAAA,MAAA,CAAA,EAAA,EAA/C,CAAA,cAAA,EAAA,uBAAA,CAA+C,CAA7C;;AAGF,SACE,KAAA,CAAA,aAAA,CAAC,oBAAD,EAAqB,QAAA,CAAA,EAAA,EACf,qBADe,EACM;AACzB,IAAA,YAAY,EAAE;AADW,GADN,CAArB,EAIE,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU,QAAA,CAAA,EAAA,EAAK,KAAL,EAAU;AAAE,IAAA,GAAG,EAAE;AAAP,GAAV,CAAV,CAJF,CADF;AAQD,CAf6C,CAAvC","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { forwardRef } from \"react\";\nimport { FormMessageContainer, } from \"../FormMessageContainer\";\nimport { TextField } from \"./TextField\";\n/**\n * This component is a simple wrapper for the `TextField` and `FormMessage`\n * components that should be used along with the `useTextField` hook to\n * conditionally show help and error messages with a `TextField`.\n *\n * Simple example:\n *\n * ```ts\n * const [value, fieldProps] = useTextField({\n *   id: \"field-id\",\n * });\n *\n * return (\n *   <TextFieldWithMessage\n *     label=\"Label\"\n *     placeholder=\"Placeholder\"\n *     {...fieldProps}\n *   />\n * );\n * ```\n *\n * @remarks \\@since 2.5.0\n */\nexport var TextFieldWithMessage = forwardRef(function TextFieldWithMessage(_a, ref) {\n    var messageProps = _a.messageProps, messageContainerProps = _a.messageContainerProps, props = __rest(_a, [\"messageProps\", \"messageContainerProps\"]);\n    return (React.createElement(FormMessageContainer, __assign({}, messageContainerProps, { messageProps: messageProps }),\n        React.createElement(TextField, __assign({}, props, { ref: ref }))));\n});\n//# sourceMappingURL=TextFieldWithMessage.js.map"]},"metadata":{},"sourceType":"module"}