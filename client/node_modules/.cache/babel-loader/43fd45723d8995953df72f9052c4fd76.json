{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from \"react\";\nimport cn from \"classnames\";\nimport { TextIconSpacing } from \"@react-md/icon\";\nimport { bem } from \"@react-md/utils\";\nvar base = bem(\"rmd-list-item\");\n/**\n * The `ListItemAddon` is used to create an addon to the left or right of the\n * text/children of a `ListItem`.\n */\n\nexport function ListItemAddon(_a) {\n  var _b;\n\n  var className = _a.className,\n      children = _a.children,\n      addon = _a.addon,\n      _c = _a.addonAfter,\n      addonAfter = _c === void 0 ? false : _c,\n      _d = _a.type,\n      type = _d === void 0 ? \"icon\" : _d,\n      _e = _a.position,\n      position = _e === void 0 ? \"middle\" : _e,\n      forceAddonWrap = _a.forceAddonWrap,\n      props = __rest(_a, [\"className\", \"children\", \"addon\", \"addonAfter\", \"type\", \"position\", \"forceAddonWrap\"]);\n\n  var isMedia = type === \"media\" || type === \"large-media\";\n  var isAvatar = type === \"avatar\";\n  return React.createElement(TextIconSpacing, __assign({}, props, {\n    icon: addon,\n    forceIconWrap: forceAddonWrap !== null && forceAddonWrap !== void 0 ? forceAddonWrap : isMedia,\n    className: cn(base(\"addon\", (_b = {}, _b[position] = position !== \"middle\", _b.before = !addonAfter, _b[\"avatar-before\"] = !addonAfter && isAvatar, _b.media = isMedia, _b[\"media-large\"] = type === \"large-media\", _b)), className),\n    iconAfter: addonAfter\n  }), children);\n}\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== \"production\") {\n  try {\n    var PropTypes = require(\"prop-types\");\n\n    ListItemAddon.propTypes = {\n      className: PropTypes.string,\n      children: PropTypes.node,\n      addon: PropTypes.node,\n      addonAfter: PropTypes.bool,\n      type: PropTypes.oneOf([\"icon\", \"avatar\", \"media\", \"large-media\"]),\n      position: PropTypes.oneOf([\"top\", \"middle\", \"bottom\"]),\n      forceAddonWrap: PropTypes.bool\n    };\n  } catch (e) {}\n}","map":{"version":3,"sources":["../src/ListItemAddon.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,MAA+C,OAA/C;AACA,OAAO,EAAP,MAAe,YAAf;AACA,SAAS,eAAT,QAAsD,gBAAtD;AACA,SAAS,GAAT,QAAoB,iBAApB;AAmCA,IAAM,IAAI,GAAG,GAAG,CAAC,eAAD,CAAhB;AAEA;;;AAGG;;AACH,OAAM,SAAU,aAAV,CAAwB,EAAxB,EASe;;;AARnB,MAAA,SAAS,GAAA,EAAA,CAAA,SAAT;AAAA,MACA,QAAQ,GAAA,EAAA,CAAA,QADR;AAAA,MAEA,KAAK,GAAA,EAAA,CAAA,KAFL;AAAA,MAGA,EAAA,GAAA,EAAA,CAAA,UAHA;AAAA,MAGA,UAAU,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,EAHlB;AAAA,MAIA,EAAA,GAAA,EAAA,CAAA,IAJA;AAAA,MAIA,IAAI,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,MAAH,GAAS,EAJb;AAAA,MAKA,EAAA,GAAA,EAAA,CAAA,QALA;AAAA,MAKA,QAAQ,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,QAAH,GAAW,EALnB;AAAA,MAMA,cAAc,GAAA,EAAA,CAAA,cANd;AAAA,MAOG,KAAK,GAAA,MAAA,CAAA,EAAA,EARoB,CAAA,WAAA,EAAA,UAAA,EAAA,OAAA,EAAA,YAAA,EAAA,MAAA,EAAA,UAAA,EAAA,gBAAA,CAQpB,CAPR;;AASA,MAAM,OAAO,GAAG,IAAI,KAAK,OAAT,IAAoB,IAAI,KAAK,aAA7C;AACA,MAAM,QAAQ,GAAG,IAAI,KAAK,QAA1B;AAEA,SACE,KAAA,CAAA,aAAA,CAAC,eAAD,EAAgB,QAAA,CAAA,EAAA,EACV,KADU,EACL;AACT,IAAA,IAAI,EAAE,KADG;AAET,IAAA,aAAa,EAAE,cAAc,KAAA,IAAd,IAAA,cAAc,KAAA,KAAA,CAAd,GAAA,cAAA,GAAkB,OAFxB;AAGT,IAAA,SAAS,EAAE,EAAE,CACX,IAAI,CAAC,OAAD,GAAQ,EAAA,GAAA,EAAA,EACV,EAAA,CAAC,QAAD,CAAA,GAAY,QAAQ,KAAK,QADf,EAEV,EAAA,CAAA,MAAA,GAAQ,CAAC,UAFC,EAGV,EAAA,CAAA,eAAA,CAAA,GAAiB,CAAC,UAAD,IAAe,QAHtB,EAIV,EAAA,CAAA,KAAA,GAAO,OAJG,EAKV,EAAA,CAAA,aAAA,CAAA,GAAe,IAAI,KAAK,aALd,EAMV,EANE,EADO,EAQX,SARW,CAHJ;AAaT,IAAA,SAAS,EAAE;AAbF,GADK,CAAhB,EAgBG,QAhBH,CADF;AAoBD;AAED;;AACA,IAAI,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,MAAI;AACF,QAAM,SAAS,GAAG,OAAO,CAAC,YAAD,CAAzB;;AAEA,IAAA,aAAa,CAAC,SAAd,GAA0B;AACxB,MAAA,SAAS,EAAE,SAAS,CAAC,MADG;AAExB,MAAA,QAAQ,EAAE,SAAS,CAAC,IAFI;AAGxB,MAAA,KAAK,EAAE,SAAS,CAAC,IAHO;AAIxB,MAAA,UAAU,EAAE,SAAS,CAAC,IAJE;AAKxB,MAAA,IAAI,EAAE,SAAS,CAAC,KAAV,CAAgB,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB,EAA4B,aAA5B,CAAhB,CALkB;AAMxB,MAAA,QAAQ,EAAE,SAAS,CAAC,KAAV,CAAgB,CAAC,KAAD,EAAQ,QAAR,EAAkB,QAAlB,CAAhB,CANc;AAOxB,MAAA,cAAc,EAAE,SAAS,CAAC;AAPF,KAA1B;AASD,GAZD,CAYE,OAAO,CAAP,EAAU,CAAE;AACf","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from \"react\";\nimport cn from \"classnames\";\nimport { TextIconSpacing } from \"@react-md/icon\";\nimport { bem } from \"@react-md/utils\";\nvar base = bem(\"rmd-list-item\");\n/**\n * The `ListItemAddon` is used to create an addon to the left or right of the\n * text/children of a `ListItem`.\n */\nexport function ListItemAddon(_a) {\n    var _b;\n    var className = _a.className, children = _a.children, addon = _a.addon, _c = _a.addonAfter, addonAfter = _c === void 0 ? false : _c, _d = _a.type, type = _d === void 0 ? \"icon\" : _d, _e = _a.position, position = _e === void 0 ? \"middle\" : _e, forceAddonWrap = _a.forceAddonWrap, props = __rest(_a, [\"className\", \"children\", \"addon\", \"addonAfter\", \"type\", \"position\", \"forceAddonWrap\"]);\n    var isMedia = type === \"media\" || type === \"large-media\";\n    var isAvatar = type === \"avatar\";\n    return (React.createElement(TextIconSpacing, __assign({}, props, { icon: addon, forceIconWrap: forceAddonWrap !== null && forceAddonWrap !== void 0 ? forceAddonWrap : isMedia, className: cn(base(\"addon\", (_b = {},\n            _b[position] = position !== \"middle\",\n            _b.before = !addonAfter,\n            _b[\"avatar-before\"] = !addonAfter && isAvatar,\n            _b.media = isMedia,\n            _b[\"media-large\"] = type === \"large-media\",\n            _b)), className), iconAfter: addonAfter }), children));\n}\n/* istanbul ignore next */\nif (process.env.NODE_ENV !== \"production\") {\n    try {\n        var PropTypes = require(\"prop-types\");\n        ListItemAddon.propTypes = {\n            className: PropTypes.string,\n            children: PropTypes.node,\n            addon: PropTypes.node,\n            addonAfter: PropTypes.bool,\n            type: PropTypes.oneOf([\"icon\", \"avatar\", \"media\", \"large-media\"]),\n            position: PropTypes.oneOf([\"top\", \"middle\", \"bottom\"]),\n            forceAddonWrap: PropTypes.bool,\n        };\n    }\n    catch (e) { }\n}\n//# sourceMappingURL=ListItemAddon.js.map"]},"metadata":{},"sourceType":"module"}