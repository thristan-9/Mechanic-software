{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { forwardRef } from \"react\";\nimport { useIcon } from \"@react-md/icon\";\nimport { InputToggle } from \"./InputToggle\";\n/**\n * The `Checkbox` component is just a wrapper for the `InputToggle` that\n * defaults to reasonable defaults for a checkbox input.\n */\n\nexport var Checkbox = forwardRef(function Checkbox(_a, ref) {\n  var propIcon = _a.icon,\n      _b = _a.indeterminate,\n      indeterminate = _b === void 0 ? false : _b,\n      props = __rest(_a, [\"icon\", \"indeterminate\"]);\n\n  var icon = useIcon(\"checkbox\", propIcon);\n  return React.createElement(InputToggle, __assign({}, props, {\n    icon: icon,\n    ref: ref,\n    type: \"checkbox\",\n    indeterminate: indeterminate\n  }));\n});\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== \"production\") {\n  try {\n    var PropTypes = require(\"prop-types\");\n\n    Checkbox.propTypes = {\n      indeterminate: PropTypes.bool,\n      icon: PropTypes.node\n    };\n  } catch (e) {}\n}","map":{"version":3,"sources":["../../src/toggle/Checkbox.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,IAAgB,UAAhB,QAAkC,OAAlC;AACA,SAAS,OAAT,QAAwB,gBAAxB;AAEA,SAAS,WAAT,QAA8C,eAA9C;AAkBA;;;AAGG;;AACH,OAAO,IAAM,QAAQ,GAAG,UAAU,CAChC,SAAS,QAAT,CAAkB,EAAlB,EAAuE,GAAvE,EAA0E;AAAtD,MAAM,QAAQ,GAAA,EAAA,CAAA,IAAd;AAAA,MAAgB,EAAA,GAAA,EAAA,CAAA,aAAhB;AAAA,MAAgB,aAAa,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,EAArC;AAAA,MAA0C,KAAK,GAAA,MAAA,CAAA,EAAA,EAAjD,CAAA,MAAA,EAAA,eAAA,CAAiD,CAA/C;;AAClB,MAAM,IAAI,GAAG,OAAO,CAAC,UAAD,EAAa,QAAb,CAApB;AAEA,SACE,KAAA,CAAA,aAAA,CAAC,WAAD,EAAY,QAAA,CAAA,EAAA,EACN,KADM,EACD;AACT,IAAA,IAAI,EAAE,IADG;AAET,IAAA,GAAG,EAAE,GAFI;AAGT,IAAA,IAAI,EAAC,UAHI;AAIT,IAAA,aAAa,EAAE;AAJN,GADC,CAAZ,CADF;AASD,CAb+B,CAA3B;AAgBP;;AACA,IAAI,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,MAAI;AACF,QAAM,SAAS,GAAG,OAAO,CAAC,YAAD,CAAzB;;AAEA,IAAA,QAAQ,CAAC,SAAT,GAAqB;AACnB,MAAA,aAAa,EAAE,SAAS,CAAC,IADN;AAEnB,MAAA,IAAI,EAAE,SAAS,CAAC;AAFG,KAArB;AAID,GAPD,CAOE,OAAO,CAAP,EAAU,CAAE;AACf","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { forwardRef } from \"react\";\nimport { useIcon } from \"@react-md/icon\";\nimport { InputToggle } from \"./InputToggle\";\n/**\n * The `Checkbox` component is just a wrapper for the `InputToggle` that\n * defaults to reasonable defaults for a checkbox input.\n */\nexport var Checkbox = forwardRef(function Checkbox(_a, ref) {\n    var propIcon = _a.icon, _b = _a.indeterminate, indeterminate = _b === void 0 ? false : _b, props = __rest(_a, [\"icon\", \"indeterminate\"]);\n    var icon = useIcon(\"checkbox\", propIcon);\n    return (React.createElement(InputToggle, __assign({}, props, { icon: icon, ref: ref, type: \"checkbox\", indeterminate: indeterminate })));\n});\n/* istanbul ignore next */\nif (process.env.NODE_ENV !== \"production\") {\n    try {\n        var PropTypes = require(\"prop-types\");\n        Checkbox.propTypes = {\n            indeterminate: PropTypes.bool,\n            icon: PropTypes.node,\n        };\n    }\n    catch (e) { }\n}\n//# sourceMappingURL=Checkbox.js.map"]},"metadata":{},"sourceType":"module"}