{"ast":null,"code":"import { useCallback } from \"react\";\nimport { useToggle } from \"@react-md/utils\";\n/**\n * @internal\n */\n\nexport function useFocusState(_a) {\n  var onFocus = _a.onFocus,\n      onBlur = _a.onBlur;\n\n  var _b = useToggle(false),\n      focused = _b[0],\n      setFocused = _b[1],\n      setBlurred = _b[2];\n\n  var handleFocus = useCallback(function (event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    setFocused();\n  }, [setFocused, onFocus]);\n  var handleBlur = useCallback(function (event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    setBlurred();\n  }, [setBlurred, onBlur]);\n  return [focused, handleFocus, handleBlur];\n}","map":{"version":3,"sources":["../src/useFocusState.ts"],"names":[],"mappings":"AAAA,SAAyB,WAAzB,QAA4C,OAA5C;AACA,SAAS,SAAT,QAA0B,iBAA1B;AAaA;;AAEG;;AACH,OAAM,SAAU,aAAV,CAAwB,EAAxB,EAGI;MAFR,OAAO,GAAA,EAAA,CAAA,O;MACP,MAAM,GAAA,EAAA,CAAA,M;;AAEA,MAAA,EAAA,GAAoC,SAAS,CAAC,KAAD,CAA7C;AAAA,MAAC,OAAO,GAAA,EAAA,CAAA,CAAA,CAAR;AAAA,MAAU,UAAU,GAAA,EAAA,CAAA,CAAA,CAApB;AAAA,MAAsB,UAAU,GAAA,EAAA,CAAA,CAAA,CAAhC;;AAEN,MAAM,WAAW,GAAG,WAAW,CAC7B,UAAC,KAAD,EAAM;AACJ,QAAI,OAAJ,EAAa;AACX,MAAA,OAAO,CAAC,KAAD,CAAP;AACD;;AAED,IAAA,UAAU;AACX,GAP4B,EAQ7B,CAAC,UAAD,EAAa,OAAb,CAR6B,CAA/B;AAWA,MAAM,UAAU,GAAG,WAAW,CAC5B,UAAC,KAAD,EAAM;AACJ,QAAI,MAAJ,EAAY;AACV,MAAA,MAAM,CAAC,KAAD,CAAN;AACD;;AAED,IAAA,UAAU;AACX,GAP2B,EAQ5B,CAAC,UAAD,EAAa,MAAb,CAR4B,CAA9B;AAWA,SAAO,CAAC,OAAD,EAAU,WAAV,EAAuB,UAAvB,CAAP;AACD","sourceRoot":"","sourcesContent":["import { useCallback } from \"react\";\nimport { useToggle } from \"@react-md/utils\";\n/**\n * @internal\n */\nexport function useFocusState(_a) {\n    var onFocus = _a.onFocus, onBlur = _a.onBlur;\n    var _b = useToggle(false), focused = _b[0], setFocused = _b[1], setBlurred = _b[2];\n    var handleFocus = useCallback(function (event) {\n        if (onFocus) {\n            onFocus(event);\n        }\n        setFocused();\n    }, [setFocused, onFocus]);\n    var handleBlur = useCallback(function (event) {\n        if (onBlur) {\n            onBlur(event);\n        }\n        setBlurred();\n    }, [setBlurred, onBlur]);\n    return [focused, handleFocus, handleBlur];\n}\n//# sourceMappingURL=useFocusState.js.map"]},"metadata":{},"sourceType":"module"}