{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { forwardRef } from \"react\";\nimport { useIcon } from \"@react-md/icon\";\nimport { MenuItemInputToggle } from \"./MenuItemInputToggle\";\n/**\n * This is a simple wrapper for the {@link MenuItemInputToggle} component to\n * render it as a checkbox and pulling the checkbox icon from the\n * {@link IconProvider}.\n *\n * @example\n * Simple Example\n * ```tsx\n * import { ReactElement, useState } from \"react\";\n * import { DropdownMenu } from \"@react-md/menu\";\n * import { MenuItemCheckbox } from \"@react-md/form\";\n *\n * function Example(): ReactElement {\n *   const [checked, setChecked] = useState(false);\n *\n *   return (\n *     <DropdownMenu\n *       id=\"dropdown-menu-id\"\n *       items={[\n *         <MenuItemCheckbox\n *           id=\"checkbox-1\"\n *           checked={checked}\n *           onCheckedChange={(nextChecked) => setChecked(nextChecked)}\n *         >\n *           Checkbox\n *        </MenuItemCheckbox>,\n *       ]}\n *     >\n *       Button\n *     </DropdownMenu>\n *   );\n * }\n * ```\n */\n\nexport var MenuItemCheckbox = forwardRef(function MenuItemCheckbox(_a, ref) {\n  var propIcon = _a.icon,\n      props = __rest(_a, [\"icon\"]);\n\n  var icon = useIcon(\"checkbox\", propIcon);\n  return React.createElement(MenuItemInputToggle, __assign({}, props, {\n    ref: ref,\n    icon: icon,\n    type: \"checkbox\"\n  }));\n});","map":{"version":3,"sources":["../../src/menu/MenuItemCheckbox.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,IAAgB,UAAhB,QAAkC,OAAlC;AACA,SAAS,OAAT,QAAwB,gBAAxB;AACA,SAEE,mBAFF,QAGO,uBAHP;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCG;;AACH,OAAO,IAAM,gBAAgB,GAAG,UAAU,CAGxC,SAAS,gBAAT,CAA0B,EAA1B,EAAwD,GAAxD,EAA2D;AAA/B,MAAM,QAAQ,GAAA,EAAA,CAAA,IAAd;AAAA,MAAmB,KAAK,GAAA,MAAA,CAAA,EAAA,EAA1B,CAAA,MAAA,CAA0B,CAAxB;;AAC5B,MAAM,IAAI,GAAG,OAAO,CAAC,UAAD,EAAa,QAAb,CAApB;AACA,SACE,KAAA,CAAA,aAAA,CAAC,mBAAD,EAAoB,QAAA,CAAA,EAAA,EAAK,KAAL,EAAU;AAAE,IAAA,GAAG,EAAE,GAAP;AAAY,IAAA,IAAI,EAAE,IAAlB;AAAwB,IAAA,IAAI,EAAC;AAA7B,GAAV,CAApB,CADF;AAGD,CARyC,CAAnC","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { forwardRef } from \"react\";\nimport { useIcon } from \"@react-md/icon\";\nimport { MenuItemInputToggle, } from \"./MenuItemInputToggle\";\n/**\n * This is a simple wrapper for the {@link MenuItemInputToggle} component to\n * render it as a checkbox and pulling the checkbox icon from the\n * {@link IconProvider}.\n *\n * @example\n * Simple Example\n * ```tsx\n * import { ReactElement, useState } from \"react\";\n * import { DropdownMenu } from \"@react-md/menu\";\n * import { MenuItemCheckbox } from \"@react-md/form\";\n *\n * function Example(): ReactElement {\n *   const [checked, setChecked] = useState(false);\n *\n *   return (\n *     <DropdownMenu\n *       id=\"dropdown-menu-id\"\n *       items={[\n *         <MenuItemCheckbox\n *           id=\"checkbox-1\"\n *           checked={checked}\n *           onCheckedChange={(nextChecked) => setChecked(nextChecked)}\n *         >\n *           Checkbox\n *        </MenuItemCheckbox>,\n *       ]}\n *     >\n *       Button\n *     </DropdownMenu>\n *   );\n * }\n * ```\n */\nexport var MenuItemCheckbox = forwardRef(function MenuItemCheckbox(_a, ref) {\n    var propIcon = _a.icon, props = __rest(_a, [\"icon\"]);\n    var icon = useIcon(\"checkbox\", propIcon);\n    return (React.createElement(MenuItemInputToggle, __assign({}, props, { ref: ref, icon: icon, type: \"checkbox\" })));\n});\n//# sourceMappingURL=MenuItemCheckbox.js.map"]},"metadata":{},"sourceType":"module"}