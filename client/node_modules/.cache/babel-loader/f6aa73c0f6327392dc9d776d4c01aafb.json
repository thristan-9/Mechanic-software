{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\nimport { Text } from \"./Text\";\nvar block = bem(\"rmd-sr-only\");\n/**\n * This component is used to create text that is only visible to screen readers.\n * If you enable the `focusable` prop, the text will become visible to all users\n * while focused.\n */\n\nexport var SrOnly = forwardRef(function SrOnly(_a, ref) {\n  var className = _a.className,\n      children = _a.children,\n      _b = _a.focusable,\n      focusable = _b === void 0 ? false : _b,\n      propTabIndex = _a.tabIndex,\n      _c = _a.component,\n      component = _c === void 0 ? \"span\" : _c,\n      props = __rest(_a, [\"className\", \"children\", \"focusable\", \"tabIndex\", \"component\"]);\n\n  var tabIndex = propTabIndex;\n\n  if (focusable && typeof tabIndex === \"undefined\") {\n    tabIndex = 0;\n  }\n\n  return React.createElement(Text, __assign({}, props, {\n    ref: ref,\n    tabIndex: tabIndex,\n    component: component,\n    className: cn(block({\n      focusable: focusable\n    }), className)\n  }), children);\n});\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== \"production\") {\n  try {\n    var PropTypes = require(\"prop-types\");\n\n    SrOnly.propTypes = {\n      className: PropTypes.string,\n      children: PropTypes.node,\n      tabIndex: PropTypes.number,\n      focusable: PropTypes.bool,\n      component: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.object])\n    };\n  } catch (e) {}\n}","map":{"version":3,"sources":["../src/SrOnly.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,IAAgB,UAAhB,QAAkC,OAAlC;AACA,OAAO,EAAP,MAAe,YAAf;AACA,SAAS,GAAT,QAAoB,iBAApB;AAEA,SAAS,IAAT,QAA6C,QAA7C;AAWA,IAAM,KAAK,GAAG,GAAG,CAAC,aAAD,CAAjB;AAEA;;;;AAIG;;AACH,OAAO,IAAM,MAAM,GAAG,UAAU,CAA2B,SAAS,MAAT,CACzD,EADyD,EASzD,GATyD,EAStD;AAPD,MAAA,SAAS,GAAA,EAAA,CAAA,SAAT;AAAA,MACA,QAAQ,GAAA,EAAA,CAAA,QADR;AAAA,MAEA,EAAA,GAAA,EAAA,CAAA,SAFA;AAAA,MAEA,SAAS,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,EAFjB;AAAA,MAGU,YAAY,GAAA,EAAA,CAAA,QAHtB;AAAA,MAIA,EAAA,GAAA,EAAA,CAAA,SAJA;AAAA,MAIA,SAAS,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,MAAH,GAAS,EAJlB;AAAA,MAKG,KAAK,GAAA,MAAA,CAAA,EAAA,EANV,CAAA,WAAA,EAAA,UAAA,EAAA,WAAA,EAAA,UAAA,EAAA,WAAA,CAMU,CALR;;AASF,MAAI,QAAQ,GAAG,YAAf;;AACA,MAAI,SAAS,IAAI,OAAO,QAAP,KAAoB,WAArC,EAAkD;AAChD,IAAA,QAAQ,GAAG,CAAX;AACD;;AAED,SACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK,QAAA,CAAA,EAAA,EACC,KADD,EACM;AACT,IAAA,GAAG,EAAE,GADI;AAET,IAAA,QAAQ,EAAE,QAFD;AAGT,IAAA,SAAS,EAAE,SAHF;AAIT,IAAA,SAAS,EAAE,EAAE,CAAC,KAAK,CAAC;AAAE,MAAA,SAAS,EAAA;AAAX,KAAD,CAAN,EAAuB,SAAvB;AAJJ,GADN,CAAL,EAOG,QAPH,CADF;AAWD,CA3B+B,CAAzB;AA6BP;;AACA,IAAI,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,MAAI;AACF,QAAM,SAAS,GAAG,OAAO,CAAC,YAAD,CAAzB;;AAEA,IAAA,MAAM,CAAC,SAAP,GAAmB;AACjB,MAAA,SAAS,EAAE,SAAS,CAAC,MADJ;AAEjB,MAAA,QAAQ,EAAE,SAAS,CAAC,IAFH;AAGjB,MAAA,QAAQ,EAAE,SAAS,CAAC,MAHH;AAIjB,MAAA,SAAS,EAAE,SAAS,CAAC,IAJJ;AAKjB,MAAA,SAAS,EAAE,SAAS,CAAC,SAAV,CAAoB,CAC7B,SAAS,CAAC,MADmB,EAE7B,SAAS,CAAC,IAFmB,EAG7B,SAAS,CAAC,MAHmB,CAApB;AALM,KAAnB;AAWD,GAdD,CAcE,OAAO,CAAP,EAAU,CAAE;AACf","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\nimport { Text } from \"./Text\";\nvar block = bem(\"rmd-sr-only\");\n/**\n * This component is used to create text that is only visible to screen readers.\n * If you enable the `focusable` prop, the text will become visible to all users\n * while focused.\n */\nexport var SrOnly = forwardRef(function SrOnly(_a, ref) {\n    var className = _a.className, children = _a.children, _b = _a.focusable, focusable = _b === void 0 ? false : _b, propTabIndex = _a.tabIndex, _c = _a.component, component = _c === void 0 ? \"span\" : _c, props = __rest(_a, [\"className\", \"children\", \"focusable\", \"tabIndex\", \"component\"]);\n    var tabIndex = propTabIndex;\n    if (focusable && typeof tabIndex === \"undefined\") {\n        tabIndex = 0;\n    }\n    return (React.createElement(Text, __assign({}, props, { ref: ref, tabIndex: tabIndex, component: component, className: cn(block({ focusable: focusable }), className) }), children));\n});\n/* istanbul ignore next */\nif (process.env.NODE_ENV !== \"production\") {\n    try {\n        var PropTypes = require(\"prop-types\");\n        SrOnly.propTypes = {\n            className: PropTypes.string,\n            children: PropTypes.node,\n            tabIndex: PropTypes.number,\n            focusable: PropTypes.bool,\n            component: PropTypes.oneOfType([\n                PropTypes.string,\n                PropTypes.func,\n                PropTypes.object,\n            ]),\n        };\n    }\n    catch (e) { }\n}\n//# sourceMappingURL=SrOnly.js.map"]},"metadata":{},"sourceType":"module"}