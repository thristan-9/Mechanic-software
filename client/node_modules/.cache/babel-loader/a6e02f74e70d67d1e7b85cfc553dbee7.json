{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { useInteractionStates } from \"@react-md/states\";\nimport { bem } from \"@react-md/utils\";\nimport { Label } from \"../label/Label\";\nimport { useFocusState } from \"../useFocusState\";\nimport { ToggleContainer } from \"./ToggleContainer\";\nimport { InputToggleIcon } from \"./InputToggleIcon\";\nvar block = bem(\"rmd-toggle\");\nexport var InputToggle = forwardRef(function InputToggle(allProps, ref) {\n  var _a = allProps,\n      style = _a.style,\n      className = _a.className,\n      iconStyle = _a.iconStyle,\n      iconClassName = _a.iconClassName,\n      toggleStyle = _a.toggleStyle,\n      propToggleClassName = _a.toggleClassName,\n      inputStyle = _a.inputStyle,\n      inputClassName = _a.inputClassName,\n      icon = _a.icon,\n      propOnFocus = _a.onFocus,\n      propOnBlur = _a.onBlur,\n      _b = _a.error,\n      error = _b === void 0 ? false : _b,\n      _c = _a.inline,\n      inline = _c === void 0 ? false : _c,\n      _d = _a.stacked,\n      stacked = _d === void 0 ? false : _d,\n      _e = _a.disabled,\n      disabled = _e === void 0 ? false : _e,\n      label = _a.label,\n      labelStyle = _a.labelStyle,\n      labelClassName = _a.labelClassName,\n      labelDisabled = _a.labelDisabled,\n      _f = _a.iconAfter,\n      iconAfter = _f === void 0 ? false : _f,\n      _g = _a.disableIconOverlay,\n      disableIconOverlay = _g === void 0 ? false : _g,\n      disableRipple = _a.disableRipple,\n      disableProgrammaticRipple = _a.disableProgrammaticRipple,\n      rippleTimeout = _a.rippleTimeout,\n      rippleClassNames = _a.rippleClassNames,\n      children = _a.children,\n      indeterminate = _a.indeterminate,\n      props = __rest(_a, [\"style\", \"className\", \"iconStyle\", \"iconClassName\", \"toggleStyle\", \"toggleClassName\", \"inputStyle\", \"inputClassName\", \"icon\", \"onFocus\", \"onBlur\", \"error\", \"inline\", \"stacked\", \"disabled\", \"label\", \"labelStyle\", \"labelClassName\", \"labelDisabled\", \"iconAfter\", \"disableIconOverlay\", \"disableRipple\", \"disableProgrammaticRipple\", \"rippleTimeout\", \"rippleClassNames\", \"children\", \"indeterminate\"]);\n\n  var id = props.id,\n      type = props.type;\n\n  var _h = useInteractionStates({\n    handlers: props,\n    disabled: disabled,\n    className: propToggleClassName,\n    disableRipple: disableRipple,\n    disableProgrammaticRipple: disableProgrammaticRipple,\n    rippleTimeout: rippleTimeout,\n    rippleClassNames: rippleClassNames\n  }),\n      ripples = _h.ripples,\n      handlers = _h.handlers,\n      toggleClassName = _h.className;\n\n  var _j = useFocusState({\n    onFocus: propOnFocus,\n    onBlur: propOnBlur\n  }),\n      focused = _j[0],\n      onFocus = _j[1],\n      onBlur = _j[2];\n\n  var labelEl = React.createElement(Label, {\n    style: labelStyle,\n    className: labelClassName,\n    htmlFor: id,\n    error: error,\n    disabled: typeof labelDisabled === \"boolean\" ? labelDisabled : disabled\n  }, label);\n  return React.createElement(ToggleContainer, {\n    style: style,\n    className: className,\n    inline: inline,\n    stacked: stacked\n  }, iconAfter && labelEl, React.createElement(\"span\", {\n    style: toggleStyle,\n    className: cn(block({\n      focused: focused,\n      disabled: disabled\n    }), toggleClassName)\n  }, React.createElement(\"input\", __assign({}, props, handlers, {\n    ref: ref,\n    style: inputStyle,\n    disabled: disabled,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    className: cn(block(\"input\"), inputClassName)\n  })), React.createElement(InputToggleIcon, {\n    circle: !disableIconOverlay && type === \"radio\",\n    disabled: disabled,\n    overlay: !disableIconOverlay,\n    indeterminate: indeterminate,\n    style: iconStyle,\n    className: iconClassName\n  }, icon), ripples, children), !iconAfter && labelEl);\n});\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== \"production\") {\n  try {\n    var PropTypes = require(\"prop-types\");\n\n    InputToggle.propTypes = {\n      id: PropTypes.string.isRequired,\n      style: PropTypes.object,\n      className: PropTypes.string,\n      type: PropTypes.oneOf([\"radio\", \"checkbox\"]).isRequired,\n      icon: PropTypes.node,\n      iconStyle: PropTypes.object,\n      iconClassName: PropTypes.string,\n      toggleStyle: PropTypes.object,\n      toggleClassName: PropTypes.string,\n      error: PropTypes.bool,\n      label: PropTypes.node,\n      labelStyle: PropTypes.object,\n      labelClassName: PropTypes.string,\n      labelDisabled: PropTypes.bool,\n      inline: PropTypes.bool,\n      stacked: PropTypes.bool,\n      disabled: PropTypes.bool,\n      iconAfter: PropTypes.bool,\n      onBlur: PropTypes.func,\n      onFocus: PropTypes.func,\n      disableIconOverlay: PropTypes.bool,\n      disableRipple: PropTypes.bool,\n      disableProgrammaticRipple: PropTypes.bool,\n      rippleTimeout: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n        appear: PropTypes.number,\n        enter: PropTypes.number,\n        exit: PropTypes.number\n      })]),\n      rippleClassNames: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n        appear: PropTypes.string,\n        appearActive: PropTypes.string,\n        enter: PropTypes.string,\n        enterActive: PropTypes.string,\n        enterDone: PropTypes.string,\n        exit: PropTypes.string,\n        exitActive: PropTypes.string,\n        exitDone: PropTypes.string\n      })]),\n      children: PropTypes.node,\n      indeterminate: PropTypes.bool\n    };\n  } catch (e) {}\n}","map":{"version":3,"sources":["../../src/toggle/InputToggle.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { forwardRef, } from \"react\";\nimport cn from \"classnames\";\nimport { useInteractionStates, } from \"@react-md/states\";\nimport { bem } from \"@react-md/utils\";\nimport { Label } from \"../label/Label\";\nimport { useFocusState } from \"../useFocusState\";\nimport { ToggleContainer } from \"./ToggleContainer\";\nimport { InputToggleIcon } from \"./InputToggleIcon\";\nvar block = bem(\"rmd-toggle\");\nexport var InputToggle = forwardRef(function InputToggle(allProps, ref) {\n    var _a = allProps, style = _a.style, className = _a.className, iconStyle = _a.iconStyle, iconClassName = _a.iconClassName, toggleStyle = _a.toggleStyle, propToggleClassName = _a.toggleClassName, inputStyle = _a.inputStyle, inputClassName = _a.inputClassName, icon = _a.icon, propOnFocus = _a.onFocus, propOnBlur = _a.onBlur, _b = _a.error, error = _b === void 0 ? false : _b, _c = _a.inline, inline = _c === void 0 ? false : _c, _d = _a.stacked, stacked = _d === void 0 ? false : _d, _e = _a.disabled, disabled = _e === void 0 ? false : _e, label = _a.label, labelStyle = _a.labelStyle, labelClassName = _a.labelClassName, labelDisabled = _a.labelDisabled, _f = _a.iconAfter, iconAfter = _f === void 0 ? false : _f, _g = _a.disableIconOverlay, disableIconOverlay = _g === void 0 ? false : _g, disableRipple = _a.disableRipple, disableProgrammaticRipple = _a.disableProgrammaticRipple, rippleTimeout = _a.rippleTimeout, rippleClassNames = _a.rippleClassNames, children = _a.children, indeterminate = _a.indeterminate, props = __rest(_a, [\"style\", \"className\", \"iconStyle\", \"iconClassName\", \"toggleStyle\", \"toggleClassName\", \"inputStyle\", \"inputClassName\", \"icon\", \"onFocus\", \"onBlur\", \"error\", \"inline\", \"stacked\", \"disabled\", \"label\", \"labelStyle\", \"labelClassName\", \"labelDisabled\", \"iconAfter\", \"disableIconOverlay\", \"disableRipple\", \"disableProgrammaticRipple\", \"rippleTimeout\", \"rippleClassNames\", \"children\", \"indeterminate\"]);\n    var id = props.id, type = props.type;\n    var _h = useInteractionStates({\n        handlers: props,\n        disabled: disabled,\n        className: propToggleClassName,\n        disableRipple: disableRipple,\n        disableProgrammaticRipple: disableProgrammaticRipple,\n        rippleTimeout: rippleTimeout,\n        rippleClassNames: rippleClassNames,\n    }), ripples = _h.ripples, handlers = _h.handlers, toggleClassName = _h.className;\n    var _j = useFocusState({\n        onFocus: propOnFocus,\n        onBlur: propOnBlur,\n    }), focused = _j[0], onFocus = _j[1], onBlur = _j[2];\n    var labelEl = (React.createElement(Label, { style: labelStyle, className: labelClassName, htmlFor: id, error: error, disabled: typeof labelDisabled === \"boolean\" ? labelDisabled : disabled }, label));\n    return (React.createElement(ToggleContainer, { style: style, className: className, inline: inline, stacked: stacked },\n        iconAfter && labelEl,\n        React.createElement(\"span\", { style: toggleStyle, className: cn(block({\n                focused: focused,\n                disabled: disabled,\n            }), toggleClassName) },\n            React.createElement(\"input\", __assign({}, props, handlers, { ref: ref, style: inputStyle, disabled: disabled, onFocus: onFocus, onBlur: onBlur, className: cn(block(\"input\"), inputClassName) })),\n            React.createElement(InputToggleIcon, { circle: !disableIconOverlay && type === \"radio\", disabled: disabled, overlay: !disableIconOverlay, indeterminate: indeterminate, style: iconStyle, className: iconClassName }, icon),\n            ripples,\n            children),\n        !iconAfter && labelEl));\n});\n/* istanbul ignore next */\nif (process.env.NODE_ENV !== \"production\") {\n    try {\n        var PropTypes = require(\"prop-types\");\n        InputToggle.propTypes = {\n            id: PropTypes.string.isRequired,\n            style: PropTypes.object,\n            className: PropTypes.string,\n            type: PropTypes.oneOf([\"radio\", \"checkbox\"]).isRequired,\n            icon: PropTypes.node,\n            iconStyle: PropTypes.object,\n            iconClassName: PropTypes.string,\n            toggleStyle: PropTypes.object,\n            toggleClassName: PropTypes.string,\n            error: PropTypes.bool,\n            label: PropTypes.node,\n            labelStyle: PropTypes.object,\n            labelClassName: PropTypes.string,\n            labelDisabled: PropTypes.bool,\n            inline: PropTypes.bool,\n            stacked: PropTypes.bool,\n            disabled: PropTypes.bool,\n            iconAfter: PropTypes.bool,\n            onBlur: PropTypes.func,\n            onFocus: PropTypes.func,\n            disableIconOverlay: PropTypes.bool,\n            disableRipple: PropTypes.bool,\n            disableProgrammaticRipple: PropTypes.bool,\n            rippleTimeout: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.shape({\n                    appear: PropTypes.number,\n                    enter: PropTypes.number,\n                    exit: PropTypes.number,\n                }),\n            ]),\n            rippleClassNames: PropTypes.oneOfType([\n                PropTypes.string,\n                PropTypes.shape({\n                    appear: PropTypes.string,\n                    appearActive: PropTypes.string,\n                    enter: PropTypes.string,\n                    enterActive: PropTypes.string,\n                    enterDone: PropTypes.string,\n                    exit: PropTypes.string,\n                    exitActive: PropTypes.string,\n                    exitDone: PropTypes.string,\n                }),\n            ]),\n            children: PropTypes.node,\n            indeterminate: PropTypes.bool,\n        };\n    }\n    catch (e) { }\n}\n//# sourceMappingURL=InputToggle.js.map"]},"metadata":{},"sourceType":"module"}