{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { forwardRef, useMemo } from \"react\";\nimport cn from \"classnames\";\nimport { bem, getPercentage } from \"@react-md/utils\";\nvar block = bem(\"rmd-circular-progress\");\nexport var CircularProgress = forwardRef(function CircularProgress(_a, ref) {\n  var className = _a.className,\n      propSvgStyle = _a.svgStyle,\n      svgClassName = _a.svgClassName,\n      propCircleStyle = _a.circleStyle,\n      circleClassName = _a.circleClassName,\n      value = _a.value,\n      _b = _a.min,\n      min = _b === void 0 ? 0 : _b,\n      _c = _a.max,\n      max = _c === void 0 ? 100 : _c,\n      _d = _a.radius,\n      radius = _d === void 0 ? 30 : _d,\n      _e = _a.center,\n      center = _e === void 0 ? 33 : _e,\n      _f = _a.viewBox,\n      viewBox = _f === void 0 ? \"0 0 66 66\" : _f,\n      _g = _a.dashoffset,\n      dashoffset = _g === void 0 ? 187 : _g,\n      _h = _a.animate,\n      animate = _h === void 0 ? true : _h,\n      _j = _a.centered,\n      centered = _j === void 0 ? true : _j,\n      _k = _a.maxRotation,\n      maxRotation = _k === void 0 ? 360 * 1.75 : _k,\n      _l = _a.small,\n      small = _l === void 0 ? false : _l,\n      props = __rest(_a, [\"className\", \"svgStyle\", \"svgClassName\", \"circleStyle\", \"circleClassName\", \"value\", \"min\", \"max\", \"radius\", \"center\", \"viewBox\", \"dashoffset\", \"animate\", \"centered\", \"maxRotation\", \"small\"]);\n\n  var progress;\n\n  if (typeof value === \"number\") {\n    progress = getPercentage(min, max, value);\n  }\n\n  var svgStyle = useMemo(function () {\n    if (typeof progress !== \"number\") {\n      return propSvgStyle;\n    }\n\n    var transform = propSvgStyle && propSvgStyle.transform;\n\n    if (maxRotation > 0) {\n      var rotate = \"rotate(\" + maxRotation * progress + \"deg)\";\n      transform = \"\" + rotate + (transform ? \" \" + transform : \"\");\n    }\n\n    return __assign(__assign({}, propSvgStyle), {\n      WebkitTransform: transform,\n      transform: transform\n    });\n  }, [progress, maxRotation, propSvgStyle]);\n  var circleStyle = useMemo(function () {\n    if (typeof progress !== \"number\") {\n      return propCircleStyle;\n    }\n\n    return __assign(__assign({}, propCircleStyle), {\n      strokeDashoffset: dashoffset - dashoffset * progress\n    });\n  }, [progress, propCircleStyle, dashoffset]);\n  var determinate = typeof progress === \"number\";\n  var indeterminate = !determinate;\n  return React.createElement(\"span\", __assign({}, props, {\n    ref: ref,\n    role: \"progressbar\",\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    \"aria-valuenow\": value,\n    className: cn(block({\n      centered: centered,\n      small: small\n    }), className)\n  }), React.createElement(\"svg\", {\n    style: svgStyle,\n    className: cn(block(\"svg\", {\n      animate: animate && determinate,\n      determinate: determinate,\n      indeterminate: indeterminate\n    }), svgClassName),\n    viewBox: viewBox\n  }, React.createElement(\"circle\", {\n    style: circleStyle,\n    className: cn(block(\"circle\", {\n      animate: animate && determinate,\n      determinate: determinate,\n      indeterminate: indeterminate\n    }), circleClassName),\n    r: radius,\n    cx: center,\n    cy: center\n  })));\n});\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== \"production\") {\n  try {\n    var PropTypes = require(\"prop-types\");\n\n    CircularProgress.propTypes = {\n      id: PropTypes.string.isRequired,\n      className: PropTypes.string,\n      min: PropTypes.number,\n      max: PropTypes.number,\n      value: PropTypes.number,\n      animate: PropTypes.bool,\n      svgStyle: PropTypes.object,\n      svgClassName: PropTypes.string,\n      circleStyle: PropTypes.object,\n      circleClassName: PropTypes.string,\n      radius: PropTypes.number,\n      center: PropTypes.number,\n      centered: PropTypes.bool,\n      maxRotation: PropTypes.number,\n      dashoffset: PropTypes.number,\n      small: PropTypes.bool,\n      viewBox: PropTypes.string\n    };\n  } catch (e) {}\n}","map":{"version":3,"sources":["../src/CircularProgress.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { forwardRef, useMemo, } from \"react\";\nimport cn from \"classnames\";\nimport { bem, getPercentage } from \"@react-md/utils\";\nvar block = bem(\"rmd-circular-progress\");\nexport var CircularProgress = forwardRef(function CircularProgress(_a, ref) {\n    var className = _a.className, propSvgStyle = _a.svgStyle, svgClassName = _a.svgClassName, propCircleStyle = _a.circleStyle, circleClassName = _a.circleClassName, value = _a.value, _b = _a.min, min = _b === void 0 ? 0 : _b, _c = _a.max, max = _c === void 0 ? 100 : _c, _d = _a.radius, radius = _d === void 0 ? 30 : _d, _e = _a.center, center = _e === void 0 ? 33 : _e, _f = _a.viewBox, viewBox = _f === void 0 ? \"0 0 66 66\" : _f, _g = _a.dashoffset, dashoffset = _g === void 0 ? 187 : _g, _h = _a.animate, animate = _h === void 0 ? true : _h, _j = _a.centered, centered = _j === void 0 ? true : _j, _k = _a.maxRotation, maxRotation = _k === void 0 ? 360 * 1.75 : _k, _l = _a.small, small = _l === void 0 ? false : _l, props = __rest(_a, [\"className\", \"svgStyle\", \"svgClassName\", \"circleStyle\", \"circleClassName\", \"value\", \"min\", \"max\", \"radius\", \"center\", \"viewBox\", \"dashoffset\", \"animate\", \"centered\", \"maxRotation\", \"small\"]);\n    var progress;\n    if (typeof value === \"number\") {\n        progress = getPercentage(min, max, value);\n    }\n    var svgStyle = useMemo(function () {\n        if (typeof progress !== \"number\") {\n            return propSvgStyle;\n        }\n        var transform = propSvgStyle && propSvgStyle.transform;\n        if (maxRotation > 0) {\n            var rotate = \"rotate(\" + maxRotation * progress + \"deg)\";\n            transform = \"\" + rotate + (transform ? \" \" + transform : \"\");\n        }\n        return __assign(__assign({}, propSvgStyle), { WebkitTransform: transform, transform: transform });\n    }, [progress, maxRotation, propSvgStyle]);\n    var circleStyle = useMemo(function () {\n        if (typeof progress !== \"number\") {\n            return propCircleStyle;\n        }\n        return __assign(__assign({}, propCircleStyle), { strokeDashoffset: dashoffset - dashoffset * progress });\n    }, [progress, propCircleStyle, dashoffset]);\n    var determinate = typeof progress === \"number\";\n    var indeterminate = !determinate;\n    return (React.createElement(\"span\", __assign({}, props, { ref: ref, role: \"progressbar\", \"aria-valuemin\": min, \"aria-valuemax\": max, \"aria-valuenow\": value, className: cn(block({ centered: centered, small: small }), className) }),\n        React.createElement(\"svg\", { style: svgStyle, className: cn(block(\"svg\", {\n                animate: animate && determinate,\n                determinate: determinate,\n                indeterminate: indeterminate,\n            }), svgClassName), viewBox: viewBox },\n            React.createElement(\"circle\", { style: circleStyle, className: cn(block(\"circle\", {\n                    animate: animate && determinate,\n                    determinate: determinate,\n                    indeterminate: indeterminate,\n                }), circleClassName), r: radius, cx: center, cy: center }))));\n});\n/* istanbul ignore next */\nif (process.env.NODE_ENV !== \"production\") {\n    try {\n        var PropTypes = require(\"prop-types\");\n        CircularProgress.propTypes = {\n            id: PropTypes.string.isRequired,\n            className: PropTypes.string,\n            min: PropTypes.number,\n            max: PropTypes.number,\n            value: PropTypes.number,\n            animate: PropTypes.bool,\n            svgStyle: PropTypes.object,\n            svgClassName: PropTypes.string,\n            circleStyle: PropTypes.object,\n            circleClassName: PropTypes.string,\n            radius: PropTypes.number,\n            center: PropTypes.number,\n            centered: PropTypes.bool,\n            maxRotation: PropTypes.number,\n            dashoffset: PropTypes.number,\n            small: PropTypes.bool,\n            viewBox: PropTypes.string,\n        };\n    }\n    catch (e) { }\n}\n//# sourceMappingURL=CircularProgress.js.map"]},"metadata":{},"sourceType":"module"}