{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport React, { forwardRef } from \"react\";\nimport { MenuItemInputToggle } from \"./MenuItemInputToggle\";\n/**\n * This is a simple wrapper for the {@link MenuItemInputToggle} component to\n * render it as a switch.\n *\n * @example\n * Simple Example\n * ```tsx\n * import { ReactElement, useState } from \"react\";\n * import { DropdownMenu } from \"@react-md/menu\";\n * import { MenuItemSwitch } from \"@react-md/form\";\n *\n * function Example(): ReactElement {\n *   const [checked, setChecked] = useState(false);\n *\n *   return (\n *     <DropdownMenu\n *       id=\"dropdown-menu-id\"\n *       items={[\n *         <MenuItemSwitch\n *           id=\"switch-1\"\n *           checked={checked}\n *           onCheckedChange={(nextChecked) => setChecked(nextChecked)}\n *         >\n *           Switch\n *        </MenuItemSwitch>,\n *       ]}\n *     >\n *       Button\n *     </DropdownMenu>\n *   );\n * }\n * ```\n *\n * @remarks \\@since 2.8.0\n */\n\nexport var MenuItemSwitch = forwardRef(function MenuItemSwitch(props, ref) {\n  return React.createElement(MenuItemInputToggle, __assign({}, props, {\n    ref: ref,\n    type: \"switch\"\n  }));\n});","map":{"version":3,"sources":["../../src/menu/MenuItemSwitch.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,KAAP,IAAgB,UAAhB,QAAkC,OAAlC;AAEA,SAEE,mBAFF,QAGO,uBAHP;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCG;;AACH,OAAO,IAAM,cAAc,GAAG,UAAU,CACtC,SAAS,cAAT,CAAwB,KAAxB,EAA+B,GAA/B,EAAkC;AAChC,SAAO,KAAA,CAAA,aAAA,CAAC,mBAAD,EAAoB,QAAA,CAAA,EAAA,EAAK,KAAL,EAAU;AAAE,IAAA,GAAG,EAAE,GAAP;AAAY,IAAA,IAAI,EAAC;AAAjB,GAAV,CAApB,CAAP;AACD,CAHqC,CAAjC","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { forwardRef } from \"react\";\nimport { MenuItemInputToggle, } from \"./MenuItemInputToggle\";\n/**\n * This is a simple wrapper for the {@link MenuItemInputToggle} component to\n * render it as a switch.\n *\n * @example\n * Simple Example\n * ```tsx\n * import { ReactElement, useState } from \"react\";\n * import { DropdownMenu } from \"@react-md/menu\";\n * import { MenuItemSwitch } from \"@react-md/form\";\n *\n * function Example(): ReactElement {\n *   const [checked, setChecked] = useState(false);\n *\n *   return (\n *     <DropdownMenu\n *       id=\"dropdown-menu-id\"\n *       items={[\n *         <MenuItemSwitch\n *           id=\"switch-1\"\n *           checked={checked}\n *           onCheckedChange={(nextChecked) => setChecked(nextChecked)}\n *         >\n *           Switch\n *        </MenuItemSwitch>,\n *       ]}\n *     >\n *       Button\n *     </DropdownMenu>\n *   );\n * }\n * ```\n *\n * @remarks \\@since 2.8.0\n */\nexport var MenuItemSwitch = forwardRef(function MenuItemSwitch(props, ref) {\n    return React.createElement(MenuItemInputToggle, __assign({}, props, { ref: ref, type: \"switch\" }));\n});\n//# sourceMappingURL=MenuItemSwitch.js.map"]},"metadata":{},"sourceType":"module"}