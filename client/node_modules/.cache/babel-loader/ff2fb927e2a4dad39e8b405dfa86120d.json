{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { useCallback, useRef, useState } from \"react\";\nimport { useIcon } from \"@react-md/icon\";\nimport { defaultGetErrorIcon } from \"./getErrorIcon\";\nimport { defaultGetErrorMessage } from \"./getErrorMessage\";\nimport { defaultIsErrored } from \"./isErrored\";\n\nvar noop = function () {// do nothing\n};\n/**\n * This hook is used to control the `value` for a `TextField` or `TextArea`\n * component along with some simple validation checks using the browser validity\n * api/constraint validation. This also provides props that can be passed to the\n * `FormMessage` component to display error messages or help text.\n *\n * Note: Even though this hook exists, it is highly recommended to use a form\n * helper library like [react-hook-form](https://react-hook-form.com/) for more\n * complex forms\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation\n * @param options - All the options used to control the functionality of this\n * hook.\n * @returns @see {@link TextFieldHookReturnType}\n * @remarks \\@since 2.5.0\n */\n\n\nexport function useTextField(_a) {\n  var id = _a.id,\n      _b = _a.defaultValue,\n      defaultValue = _b === void 0 ? \"\" : _b,\n      theme = _a.theme,\n      pattern = _a.pattern,\n      required = _a.required,\n      minLength = _a.minLength,\n      maxLength = _a.maxLength,\n      _c = _a.disableMaxLength,\n      disableMaxLength = _c === void 0 ? false : _c,\n      onBlur = _a.onBlur,\n      onChange = _a.onChange,\n      helpText = _a.helpText,\n      propErrorIcon = _a.errorIcon,\n      _d = _a.counter,\n      counter = _d === void 0 ? false : _d,\n      _e = _a.disableMessage,\n      disableMessage = _e === void 0 ? false : _e,\n      _f = _a.validateOnChange,\n      validateOnChange = _f === void 0 ? \"recommended\" : _f,\n      _g = _a.isErrored,\n      isErrored = _g === void 0 ? defaultIsErrored : _g,\n      _h = _a.onErrorChange,\n      onErrorChange = _h === void 0 ? noop : _h,\n      _j = _a.getErrorIcon,\n      getErrorIcon = _j === void 0 ? defaultGetErrorIcon : _j,\n      _k = _a.getErrorMessage,\n      getErrorMessage = _k === void 0 ? defaultGetErrorMessage : _k;\n\n  var _l = useState(function () {\n    var value = typeof defaultValue === \"function\" ? defaultValue() : defaultValue;\n    return {\n      value: value,\n      error: false,\n      errorMessage: \"\"\n    };\n  }),\n      state = _l[0],\n      setState = _l[1];\n\n  var value = state.value,\n      error = state.error,\n      errorMessage = state.errorMessage;\n  var errored = useRef(false);\n  var fieldRef = useRef(null);\n  var messageId = id + \"-message\";\n  var isCounting = counter && typeof maxLength === \"number\";\n  var reset = useCallback(function () {\n    /* istanbul ignore next */\n    if (fieldRef.current) {\n      fieldRef.current.setCustomValidity(\"\");\n    }\n\n    setState({\n      value: \"\",\n      error: false,\n      errorMessage: \"\"\n    });\n  }, []);\n  var updateState = useCallback(function (field, isBlurEvent) {\n    fieldRef.current = field; // need to temporarily set the `maxLength` back so it can be \"verified\"\n    // through the validity api\n\n    /* istanbul ignore next */\n\n    if (isBlurEvent && disableMaxLength && typeof maxLength === \"number\") {\n      field.maxLength = maxLength;\n    }\n\n    var value = field.value;\n    field.setCustomValidity(\"\");\n    field.checkValidity(); // remove the temporarily set `maxLength` attribute after checking the\n    // validity\n\n    /* istanbul ignore next */\n\n    if (disableMaxLength && typeof maxLength === \"number\") {\n      field.removeAttribute(\"maxLength\");\n    }\n\n    var options = {\n      value: value,\n      pattern: pattern,\n      required: required,\n      minLength: minLength,\n      maxLength: maxLength,\n      isBlurEvent: isBlurEvent,\n      validity: field.validity,\n      validationMessage: field.validationMessage,\n      validateOnChange: validateOnChange\n    };\n    var errorMessage = getErrorMessage(options);\n    var error = isErrored(__assign(__assign({}, options), {\n      errorMessage: errorMessage\n    }));\n\n    if (errored.current !== error) {\n      errored.current = error;\n      onErrorChange(id, error);\n    }\n    /* istanbul ignore next */\n\n\n    if (errorMessage !== field.validationMessage) {\n      field.setCustomValidity(errorMessage);\n    }\n\n    setState({\n      value: value,\n      error: error,\n      errorMessage: errorMessage\n    });\n  }, [disableMaxLength, getErrorMessage, id, isErrored, maxLength, minLength, onErrorChange, pattern, required, validateOnChange]);\n  var handleBlur = useCallback(function (event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (event.isPropagationStopped()) {\n      return;\n    }\n\n    updateState(event.currentTarget, true);\n  }, [onBlur, updateState]);\n  var handleChange = useCallback(function (event) {\n    if (onChange) {\n      onChange(event);\n    }\n\n    if (event.isPropagationStopped()) {\n      return;\n    }\n\n    if (!validateOnChange || Array.isArray(validateOnChange) && !validateOnChange.length) {\n      setState(function (prevState) {\n        return __assign(__assign({}, prevState), {\n          value: event.currentTarget.value\n        });\n      });\n      return;\n    }\n\n    updateState(event.currentTarget, false);\n  }, [onChange, updateState, validateOnChange]);\n  var errorIcon = useIcon(\"error\", propErrorIcon);\n  var props = {\n    id: id,\n    value: value,\n    theme: theme,\n    error: error,\n    required: required,\n    pattern: pattern,\n    minLength: minLength,\n    maxLength: disableMaxLength ? undefined : maxLength,\n    rightChildren: getErrorIcon(errorMessage, error, errorIcon),\n    onBlur: handleBlur,\n    onChange: handleChange\n  };\n\n  if (!disableMessage) {\n    props[\"aria-describedby\"] = messageId;\n    props.messageProps = {\n      id: messageId,\n      error: error,\n      theme: theme,\n      length: counter ? value.length : undefined,\n      maxLength: isCounting ? maxLength : undefined,\n      children: errorMessage || helpText\n    };\n  }\n\n  return [value, props, {\n    reset: reset,\n    setState: setState\n  }];\n}","map":{"version":3,"sources":["../../src/text-field/useTextField.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { useCallback, useRef, useState, } from \"react\";\nimport { useIcon } from \"@react-md/icon\";\nimport { defaultGetErrorIcon } from \"./getErrorIcon\";\nimport { defaultGetErrorMessage, } from \"./getErrorMessage\";\nimport { defaultIsErrored } from \"./isErrored\";\nvar noop = function () {\n    // do nothing\n};\n/**\n * This hook is used to control the `value` for a `TextField` or `TextArea`\n * component along with some simple validation checks using the browser validity\n * api/constraint validation. This also provides props that can be passed to the\n * `FormMessage` component to display error messages or help text.\n *\n * Note: Even though this hook exists, it is highly recommended to use a form\n * helper library like [react-hook-form](https://react-hook-form.com/) for more\n * complex forms\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation\n * @param options - All the options used to control the functionality of this\n * hook.\n * @returns @see {@link TextFieldHookReturnType}\n * @remarks \\@since 2.5.0\n */\nexport function useTextField(_a) {\n    var id = _a.id, _b = _a.defaultValue, defaultValue = _b === void 0 ? \"\" : _b, theme = _a.theme, pattern = _a.pattern, required = _a.required, minLength = _a.minLength, maxLength = _a.maxLength, _c = _a.disableMaxLength, disableMaxLength = _c === void 0 ? false : _c, onBlur = _a.onBlur, onChange = _a.onChange, helpText = _a.helpText, propErrorIcon = _a.errorIcon, _d = _a.counter, counter = _d === void 0 ? false : _d, _e = _a.disableMessage, disableMessage = _e === void 0 ? false : _e, _f = _a.validateOnChange, validateOnChange = _f === void 0 ? \"recommended\" : _f, _g = _a.isErrored, isErrored = _g === void 0 ? defaultIsErrored : _g, _h = _a.onErrorChange, onErrorChange = _h === void 0 ? noop : _h, _j = _a.getErrorIcon, getErrorIcon = _j === void 0 ? defaultGetErrorIcon : _j, _k = _a.getErrorMessage, getErrorMessage = _k === void 0 ? defaultGetErrorMessage : _k;\n    var _l = useState(function () {\n        var value = typeof defaultValue === \"function\" ? defaultValue() : defaultValue;\n        return {\n            value: value,\n            error: false,\n            errorMessage: \"\",\n        };\n    }), state = _l[0], setState = _l[1];\n    var value = state.value, error = state.error, errorMessage = state.errorMessage;\n    var errored = useRef(false);\n    var fieldRef = useRef(null);\n    var messageId = id + \"-message\";\n    var isCounting = counter && typeof maxLength === \"number\";\n    var reset = useCallback(function () {\n        /* istanbul ignore next */\n        if (fieldRef.current) {\n            fieldRef.current.setCustomValidity(\"\");\n        }\n        setState({\n            value: \"\",\n            error: false,\n            errorMessage: \"\",\n        });\n    }, []);\n    var updateState = useCallback(function (field, isBlurEvent) {\n        fieldRef.current = field;\n        // need to temporarily set the `maxLength` back so it can be \"verified\"\n        // through the validity api\n        /* istanbul ignore next */\n        if (isBlurEvent && disableMaxLength && typeof maxLength === \"number\") {\n            field.maxLength = maxLength;\n        }\n        var value = field.value;\n        field.setCustomValidity(\"\");\n        field.checkValidity();\n        // remove the temporarily set `maxLength` attribute after checking the\n        // validity\n        /* istanbul ignore next */\n        if (disableMaxLength && typeof maxLength === \"number\") {\n            field.removeAttribute(\"maxLength\");\n        }\n        var options = {\n            value: value,\n            pattern: pattern,\n            required: required,\n            minLength: minLength,\n            maxLength: maxLength,\n            isBlurEvent: isBlurEvent,\n            validity: field.validity,\n            validationMessage: field.validationMessage,\n            validateOnChange: validateOnChange,\n        };\n        var errorMessage = getErrorMessage(options);\n        var error = isErrored(__assign(__assign({}, options), { errorMessage: errorMessage }));\n        if (errored.current !== error) {\n            errored.current = error;\n            onErrorChange(id, error);\n        }\n        /* istanbul ignore next */\n        if (errorMessage !== field.validationMessage) {\n            field.setCustomValidity(errorMessage);\n        }\n        setState({ value: value, error: error, errorMessage: errorMessage });\n    }, [\n        disableMaxLength,\n        getErrorMessage,\n        id,\n        isErrored,\n        maxLength,\n        minLength,\n        onErrorChange,\n        pattern,\n        required,\n        validateOnChange,\n    ]);\n    var handleBlur = useCallback(function (event) {\n        if (onBlur) {\n            onBlur(event);\n        }\n        if (event.isPropagationStopped()) {\n            return;\n        }\n        updateState(event.currentTarget, true);\n    }, [onBlur, updateState]);\n    var handleChange = useCallback(function (event) {\n        if (onChange) {\n            onChange(event);\n        }\n        if (event.isPropagationStopped()) {\n            return;\n        }\n        if (!validateOnChange ||\n            (Array.isArray(validateOnChange) && !validateOnChange.length)) {\n            setState(function (prevState) { return (__assign(__assign({}, prevState), { value: event.currentTarget.value })); });\n            return;\n        }\n        updateState(event.currentTarget, false);\n    }, [onChange, updateState, validateOnChange]);\n    var errorIcon = useIcon(\"error\", propErrorIcon);\n    var props = {\n        id: id,\n        value: value,\n        theme: theme,\n        error: error,\n        required: required,\n        pattern: pattern,\n        minLength: minLength,\n        maxLength: disableMaxLength ? undefined : maxLength,\n        rightChildren: getErrorIcon(errorMessage, error, errorIcon),\n        onBlur: handleBlur,\n        onChange: handleChange,\n    };\n    if (!disableMessage) {\n        props[\"aria-describedby\"] = messageId;\n        props.messageProps = {\n            id: messageId,\n            error: error,\n            theme: theme,\n            length: counter ? value.length : undefined,\n            maxLength: isCounting ? maxLength : undefined,\n            children: errorMessage || helpText,\n        };\n    }\n    return [\n        value,\n        props,\n        {\n            reset: reset,\n            setState: setState,\n        },\n    ];\n}\n//# sourceMappingURL=useTextField.js.map"]},"metadata":{},"sourceType":"module"}