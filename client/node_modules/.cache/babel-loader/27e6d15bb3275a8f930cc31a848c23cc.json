{"ast":null,"code":"/**\n * An extremely simple util that can be used to get the required a11y props for\n * another component that relies on a progress component.\n *\n * @param progressId - The id for the progress bar\n * @param progressing - Boolean if the progress bar is visible and progressing\n */\nexport function getProgressA11y(progressId, progressing) {\n  if (!progressing) {\n    return undefined;\n  }\n\n  return {\n    \"aria-busy\": true,\n    \"aria-describedby\": progressId\n  };\n}","map":{"version":3,"sources":["../src/getProgressA11y.ts"],"names":[],"mappings":"AAKA;;;;;;AAMG;AACH,OAAM,SAAU,eAAV,CACJ,UADI,EAEJ,WAFI,EAEgB;AAEpB,MAAI,CAAC,WAAL,EAAkB;AAChB,WAAO,SAAP;AACD;;AAED,SAAO;AACL,iBAAa,IADR;AAEL,wBAAoB;AAFf,GAAP;AAID","sourceRoot":"","sourcesContent":["/**\n * An extremely simple util that can be used to get the required a11y props for\n * another component that relies on a progress component.\n *\n * @param progressId - The id for the progress bar\n * @param progressing - Boolean if the progress bar is visible and progressing\n */\nexport function getProgressA11y(progressId, progressing) {\n    if (!progressing) {\n        return undefined;\n    }\n    return {\n        \"aria-busy\": true,\n        \"aria-describedby\": progressId,\n    };\n}\n//# sourceMappingURL=getProgressA11y.js.map"]},"metadata":{},"sourceType":"module"}