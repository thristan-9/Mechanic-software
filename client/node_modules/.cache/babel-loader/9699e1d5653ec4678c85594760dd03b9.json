{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { useCallback, useRef, useState } from \"react\";\nimport { withinRange } from \"@react-md/utils\";\nimport { useTextField } from \"./useTextField\";\n/**\n * This hook is used to control the value for the `TextField` component acting\n * as an `<input type=\"number\">` and ensuring that a \"valid\" `number` is\n * available. There is also built-in support for using the validity\n * api/constraint validation so that real-time errors can be presented to the\n * user as they type along with the `FormMessage` component.\n *\n * Simple example:\n *\n * ```tsx\n * const [value, fieldProps] = useNumberField({\n *   id: 'field-id',\n *   min: 0,\n *   max: 10,\n *   defaultValue: 0,\n *   disableMessage: true,\n * });\n *\n * return <TextField {...fieldProps} label=\"Label\" placeholder=\"0\" />;\n * ```\n *\n * Step example and messaging:\n *\n * ```tsx\n * const [value, fieldProps] = useNumberField({\n *   id: 'field-id',\n *   min: 0,\n *   max: 10,\n *   step: 2,\n *   defaultValue: 0,\n * });\n *\n * return <TextFieldWithMessage {...fieldProps} label=\"Label\" placeholder=\"0\" />;\n * ```\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation\n * @see {@link useTextField}\n * @param options - All the options used to control the functionality of this\n * hook.\n * @returns @see {@link NumberFieldHookReturnType}\n * @remarks \\@since 2.5.0\n */\n\nexport function useNumberField(_a) {\n  var id = _a.id,\n      defaultValue = _a.defaultValue,\n      theme = _a.theme,\n      pattern = _a.pattern,\n      required = _a.required,\n      minLength = _a.minLength,\n      maxLength = _a.maxLength,\n      _b = _a.disableMaxLength,\n      disableMaxLength = _b === void 0 ? false : _b,\n      onBlur = _a.onBlur,\n      onChange = _a.onChange,\n      helpText = _a.helpText,\n      errorIcon = _a.errorIcon,\n      _c = _a.counter,\n      counter = _c === void 0 ? false : _c,\n      _d = _a.disableMessage,\n      disableMessage = _d === void 0 ? false : _d,\n      _e = _a.validateOnChange,\n      validateOnChange = _e === void 0 ? \"number-recommended\" : _e,\n      isErrored = _a.isErrored,\n      onErrorChange = _a.onErrorChange,\n      getErrorIcon = _a.getErrorIcon,\n      getErrorMessage = _a.getErrorMessage,\n      min = _a.min,\n      max = _a.max,\n      step = _a.step,\n      _f = _a.fixOnBlur,\n      fixOnBlur = _f === void 0 ? true : _f,\n      _g = _a.updateOnChange,\n      updateOnChange = _g === void 0 ? true : _g;\n\n  var _h = useState(defaultValue),\n      number = _h[0],\n      setNumber = _h[1];\n\n  var initial = useRef(number);\n  var handleBlur = useCallback(function (event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (event.isPropagationStopped()) {\n      return;\n    }\n\n    var input = event.currentTarget;\n    input.setCustomValidity(\"\");\n    input.checkValidity();\n\n    if (!fixOnBlur || // do nothing else since it's a weird value like: `\"--0\"` which causes\n    // the value to be `\"\"` and `numberAsValue` to be `NaN`\n    input.validity.badInput || input.validity.rangeUnderflow && fixOnBlur === \"max\" || input.validity.rangeOverflow && fixOnBlur === \"min\") {\n      return;\n    }\n\n    var value = input.valueAsNumber;\n\n    if (input.value === \"\" && typeof initial.current === \"number\") {\n      value = min !== null && min !== void 0 ? min : initial.current;\n    } // can't have both rangeUnderflow and rangeOverflow at the same time, so\n    // it's \"safe\" to always provide both\n\n\n    value = withinRange(value, min, max);\n\n    if (!Number.isNaN(value)) {\n      setNumber(value);\n      input.value = \"\" + value;\n    } else if (typeof initial.current === \"undefined\") {\n      setNumber(undefined);\n    }\n  }, [onBlur, fixOnBlur, min, max]);\n  var handleChange = useCallback(function (event) {\n    if (onChange) {\n      onChange(event);\n    }\n\n    if (event.isPropagationStopped() || !updateOnChange) {\n      return;\n    }\n\n    var input = event.currentTarget;\n    input.checkValidity();\n    var value = withinRange(event.currentTarget.valueAsNumber, min, max);\n\n    if (!input.validity.valid && !input.validity.rangeUnderflow && !input.validity.rangeOverflow) {\n      return;\n    }\n\n    if (!Number.isNaN(value)) {\n      setNumber(value);\n    } else if (initial.current === undefined) {\n      setNumber(undefined);\n    }\n  }, [onChange, updateOnChange, min, max]);\n\n  var _j = useTextField({\n    id: id,\n    defaultValue: \"\" + (number !== null && number !== void 0 ? number : \"\"),\n    theme: theme,\n    pattern: pattern,\n    required: required,\n    minLength: minLength,\n    maxLength: maxLength,\n    disableMaxLength: disableMaxLength,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    helpText: helpText,\n    errorIcon: errorIcon,\n    counter: counter,\n    disableMessage: disableMessage,\n    validateOnChange: validateOnChange,\n    isErrored: isErrored,\n    onErrorChange: onErrorChange,\n    getErrorIcon: getErrorIcon,\n    getErrorMessage: getErrorMessage\n  }),\n      props = _j[1],\n      setState = _j[2].setState;\n\n  var reset = useCallback(function () {\n    var _a;\n\n    setNumber(initial.current);\n    setState({\n      value: \"\" + ((_a = initial.current) !== null && _a !== void 0 ? _a : \"\"),\n      error: false,\n      errorMessage: \"\"\n    });\n  }, [setState]);\n  var updateNumber = useCallback(function (value) {\n    if (typeof value === \"function\") {\n      setNumber(function (prevNumber) {\n        var updated = value(prevNumber);\n        setState(function (prevState) {\n          return __assign(__assign({}, prevState), {\n            value: \"\" + (updated !== null && updated !== void 0 ? updated : \"\")\n          });\n        });\n        return updated;\n      });\n      return;\n    }\n\n    setNumber(value);\n    setState(function (prevState) {\n      return __assign(__assign({}, prevState), {\n        value: \"\" + (value !== null && value !== void 0 ? value : \"\")\n      });\n    });\n  }, [setState]);\n  return [number, __assign(__assign({}, props), {\n    min: min,\n    max: max,\n    step: step,\n    type: \"number\"\n  }), {\n    reset: reset,\n    setNumber: updateNumber\n  }];\n}","map":{"version":3,"sources":["../../src/text-field/useNumberField.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { useCallback, useRef, useState, } from \"react\";\nimport { withinRange } from \"@react-md/utils\";\nimport { useTextField, } from \"./useTextField\";\n/**\n * This hook is used to control the value for the `TextField` component acting\n * as an `<input type=\"number\">` and ensuring that a \"valid\" `number` is\n * available. There is also built-in support for using the validity\n * api/constraint validation so that real-time errors can be presented to the\n * user as they type along with the `FormMessage` component.\n *\n * Simple example:\n *\n * ```tsx\n * const [value, fieldProps] = useNumberField({\n *   id: 'field-id',\n *   min: 0,\n *   max: 10,\n *   defaultValue: 0,\n *   disableMessage: true,\n * });\n *\n * return <TextField {...fieldProps} label=\"Label\" placeholder=\"0\" />;\n * ```\n *\n * Step example and messaging:\n *\n * ```tsx\n * const [value, fieldProps] = useNumberField({\n *   id: 'field-id',\n *   min: 0,\n *   max: 10,\n *   step: 2,\n *   defaultValue: 0,\n * });\n *\n * return <TextFieldWithMessage {...fieldProps} label=\"Label\" placeholder=\"0\" />;\n * ```\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation\n * @see {@link useTextField}\n * @param options - All the options used to control the functionality of this\n * hook.\n * @returns @see {@link NumberFieldHookReturnType}\n * @remarks \\@since 2.5.0\n */\nexport function useNumberField(_a) {\n    var id = _a.id, defaultValue = _a.defaultValue, theme = _a.theme, pattern = _a.pattern, required = _a.required, minLength = _a.minLength, maxLength = _a.maxLength, _b = _a.disableMaxLength, disableMaxLength = _b === void 0 ? false : _b, onBlur = _a.onBlur, onChange = _a.onChange, helpText = _a.helpText, errorIcon = _a.errorIcon, _c = _a.counter, counter = _c === void 0 ? false : _c, _d = _a.disableMessage, disableMessage = _d === void 0 ? false : _d, _e = _a.validateOnChange, validateOnChange = _e === void 0 ? \"number-recommended\" : _e, isErrored = _a.isErrored, onErrorChange = _a.onErrorChange, getErrorIcon = _a.getErrorIcon, getErrorMessage = _a.getErrorMessage, min = _a.min, max = _a.max, step = _a.step, _f = _a.fixOnBlur, fixOnBlur = _f === void 0 ? true : _f, _g = _a.updateOnChange, updateOnChange = _g === void 0 ? true : _g;\n    var _h = useState(defaultValue), number = _h[0], setNumber = _h[1];\n    var initial = useRef(number);\n    var handleBlur = useCallback(function (event) {\n        if (onBlur) {\n            onBlur(event);\n        }\n        if (event.isPropagationStopped()) {\n            return;\n        }\n        var input = event.currentTarget;\n        input.setCustomValidity(\"\");\n        input.checkValidity();\n        if (!fixOnBlur ||\n            // do nothing else since it's a weird value like: `\"--0\"` which causes\n            // the value to be `\"\"` and `numberAsValue` to be `NaN`\n            input.validity.badInput ||\n            (input.validity.rangeUnderflow && fixOnBlur === \"max\") ||\n            (input.validity.rangeOverflow && fixOnBlur === \"min\")) {\n            return;\n        }\n        var value = input.valueAsNumber;\n        if (input.value === \"\" && typeof initial.current === \"number\") {\n            value = min !== null && min !== void 0 ? min : initial.current;\n        }\n        // can't have both rangeUnderflow and rangeOverflow at the same time, so\n        // it's \"safe\" to always provide both\n        value = withinRange(value, min, max);\n        if (!Number.isNaN(value)) {\n            setNumber(value);\n            input.value = \"\" + value;\n        }\n        else if (typeof initial.current === \"undefined\") {\n            setNumber(undefined);\n        }\n    }, [onBlur, fixOnBlur, min, max]);\n    var handleChange = useCallback(function (event) {\n        if (onChange) {\n            onChange(event);\n        }\n        if (event.isPropagationStopped() || !updateOnChange) {\n            return;\n        }\n        var input = event.currentTarget;\n        input.checkValidity();\n        var value = withinRange(event.currentTarget.valueAsNumber, min, max);\n        if (!input.validity.valid &&\n            !input.validity.rangeUnderflow &&\n            !input.validity.rangeOverflow) {\n            return;\n        }\n        if (!Number.isNaN(value)) {\n            setNumber(value);\n        }\n        else if (initial.current === undefined) {\n            setNumber(undefined);\n        }\n    }, [onChange, updateOnChange, min, max]);\n    var _j = useTextField({\n        id: id,\n        defaultValue: \"\" + (number !== null && number !== void 0 ? number : \"\"),\n        theme: theme,\n        pattern: pattern,\n        required: required,\n        minLength: minLength,\n        maxLength: maxLength,\n        disableMaxLength: disableMaxLength,\n        onBlur: handleBlur,\n        onChange: handleChange,\n        helpText: helpText,\n        errorIcon: errorIcon,\n        counter: counter,\n        disableMessage: disableMessage,\n        validateOnChange: validateOnChange,\n        isErrored: isErrored,\n        onErrorChange: onErrorChange,\n        getErrorIcon: getErrorIcon,\n        getErrorMessage: getErrorMessage,\n    }), props = _j[1], setState = _j[2].setState;\n    var reset = useCallback(function () {\n        var _a;\n        setNumber(initial.current);\n        setState({\n            value: \"\" + ((_a = initial.current) !== null && _a !== void 0 ? _a : \"\"),\n            error: false,\n            errorMessage: \"\",\n        });\n    }, [setState]);\n    var updateNumber = useCallback(function (value) {\n        if (typeof value === \"function\") {\n            setNumber(function (prevNumber) {\n                var updated = value(prevNumber);\n                setState(function (prevState) { return (__assign(__assign({}, prevState), { value: \"\" + (updated !== null && updated !== void 0 ? updated : \"\") })); });\n                return updated;\n            });\n            return;\n        }\n        setNumber(value);\n        setState(function (prevState) { return (__assign(__assign({}, prevState), { value: \"\" + (value !== null && value !== void 0 ? value : \"\") })); });\n    }, [setState]);\n    return [\n        number,\n        __assign(__assign({}, props), { min: min, max: max, step: step, type: \"number\" }),\n        {\n            reset: reset,\n            setNumber: updateNumber,\n        },\n    ];\n}\n//# sourceMappingURL=useNumberField.js.map"]},"metadata":{},"sourceType":"module"}