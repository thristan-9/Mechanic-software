{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from \"react\";\nimport CSSTransition from \"react-transition-group/CSSTransition\";\nimport { ConditionalPortal } from \"@react-md/portal\";\nimport { SCALE_CLASSNAMES, SCALE_TIMEOUT, SCALE_Y_CLASSNAMES } from \"./constants\";\n/**\n * This `ScaleTransition` component is used to trigger an animation that\n * switches between an opacity of `0` and `1` and using a `transform: scale(0)`\n * to `transform: scale(1)`. It is recommended to also manually apply a\n * `transform-origin` style or use the `useFixedPositioning` hook to generate\n * for you so that the animation starts from a specific point.\n *\n * Since the default scale animation is X and Y, you can enable the `vertical`\n * prop which will update the transition to use `transform: scaleY(0)` to\n * `transform: scaleY(1)` instead.\n */\n\nexport function ScaleTransition(_a) {\n  var visible = _a.visible,\n      children = _a.children,\n      propClassNames = _a.classNames,\n      _b = _a.vertical,\n      vertical = _b === void 0 ? false : _b,\n      _c = _a.timeout,\n      timeout = _c === void 0 ? SCALE_TIMEOUT : _c,\n      _d = _a.portal,\n      portal = _d === void 0 ? false : _d,\n      portalInto = _a.portalInto,\n      portalIntoId = _a.portalIntoId,\n      _e = _a.mountOnEnter,\n      mountOnEnter = _e === void 0 ? true : _e,\n      _f = _a.unmountOnExit,\n      unmountOnExit = _f === void 0 ? true : _f,\n      props = __rest(_a, [\"visible\", \"children\", \"classNames\", \"vertical\", \"timeout\", \"portal\", \"portalInto\", \"portalIntoId\", \"mountOnEnter\", \"unmountOnExit\"]);\n\n  var classNames = propClassNames;\n\n  if (!classNames) {\n    classNames = vertical ? SCALE_Y_CLASSNAMES : SCALE_CLASSNAMES;\n  }\n\n  return React.createElement(ConditionalPortal, {\n    portal: portal,\n    portalInto: portalInto,\n    portalIntoId: portalIntoId\n  }, React.createElement(CSSTransition, __assign({}, props, {\n    in: visible,\n    timeout: timeout,\n    classNames: classNames,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }), children));\n}\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== \"production\") {\n  try {\n    var PropTypes = require(\"prop-types\");\n\n    ScaleTransition.propTypes = {\n      portal: PropTypes.bool,\n      portalInto: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n      portalIntoId: PropTypes.string,\n      mountOnEnter: PropTypes.bool,\n      unmountOnExit: PropTypes.bool,\n      visible: PropTypes.bool.isRequired,\n      vertical: PropTypes.bool,\n      timeout: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n        enter: PropTypes.number,\n        exit: PropTypes.number\n      })]),\n      classNames: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n        appear: PropTypes.string,\n        appearActive: PropTypes.string,\n        enter: PropTypes.string,\n        enterActive: PropTypes.string,\n        enterDone: PropTypes.string,\n        exit: PropTypes.string,\n        exitActive: PropTypes.string,\n        exitDone: PropTypes.string\n      })]),\n      children: PropTypes.node\n    };\n  } catch (e) {}\n}","map":{"version":3,"sources":["../src/ScaleTransition.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from \"react\";\nimport CSSTransition from \"react-transition-group/CSSTransition\";\nimport { ConditionalPortal, } from \"@react-md/portal\";\nimport { SCALE_CLASSNAMES, SCALE_TIMEOUT, SCALE_Y_CLASSNAMES, } from \"./constants\";\n/**\n * This `ScaleTransition` component is used to trigger an animation that\n * switches between an opacity of `0` and `1` and using a `transform: scale(0)`\n * to `transform: scale(1)`. It is recommended to also manually apply a\n * `transform-origin` style or use the `useFixedPositioning` hook to generate\n * for you so that the animation starts from a specific point.\n *\n * Since the default scale animation is X and Y, you can enable the `vertical`\n * prop which will update the transition to use `transform: scaleY(0)` to\n * `transform: scaleY(1)` instead.\n */\nexport function ScaleTransition(_a) {\n    var visible = _a.visible, children = _a.children, propClassNames = _a.classNames, _b = _a.vertical, vertical = _b === void 0 ? false : _b, _c = _a.timeout, timeout = _c === void 0 ? SCALE_TIMEOUT : _c, _d = _a.portal, portal = _d === void 0 ? false : _d, portalInto = _a.portalInto, portalIntoId = _a.portalIntoId, _e = _a.mountOnEnter, mountOnEnter = _e === void 0 ? true : _e, _f = _a.unmountOnExit, unmountOnExit = _f === void 0 ? true : _f, props = __rest(_a, [\"visible\", \"children\", \"classNames\", \"vertical\", \"timeout\", \"portal\", \"portalInto\", \"portalIntoId\", \"mountOnEnter\", \"unmountOnExit\"]);\n    var classNames = propClassNames;\n    if (!classNames) {\n        classNames = vertical ? SCALE_Y_CLASSNAMES : SCALE_CLASSNAMES;\n    }\n    return (React.createElement(ConditionalPortal, { portal: portal, portalInto: portalInto, portalIntoId: portalIntoId },\n        React.createElement(CSSTransition, __assign({}, props, { in: visible, timeout: timeout, classNames: classNames, mountOnEnter: mountOnEnter, unmountOnExit: unmountOnExit }), children)));\n}\n/* istanbul ignore next */\nif (process.env.NODE_ENV !== \"production\") {\n    try {\n        var PropTypes = require(\"prop-types\");\n        ScaleTransition.propTypes = {\n            portal: PropTypes.bool,\n            portalInto: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n            portalIntoId: PropTypes.string,\n            mountOnEnter: PropTypes.bool,\n            unmountOnExit: PropTypes.bool,\n            visible: PropTypes.bool.isRequired,\n            vertical: PropTypes.bool,\n            timeout: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.shape({\n                    enter: PropTypes.number,\n                    exit: PropTypes.number,\n                }),\n            ]),\n            classNames: PropTypes.oneOfType([\n                PropTypes.string,\n                PropTypes.shape({\n                    appear: PropTypes.string,\n                    appearActive: PropTypes.string,\n                    enter: PropTypes.string,\n                    enterActive: PropTypes.string,\n                    enterDone: PropTypes.string,\n                    exit: PropTypes.string,\n                    exitActive: PropTypes.string,\n                    exitDone: PropTypes.string,\n                }),\n            ]),\n            children: PropTypes.node,\n        };\n    }\n    catch (e) { }\n}\n//# sourceMappingURL=ScaleTransition.js.map"]},"metadata":{},"sourceType":"module"}