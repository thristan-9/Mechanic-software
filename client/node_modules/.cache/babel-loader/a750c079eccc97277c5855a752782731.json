{"ast":null,"code":"import { useCallback, useMemo, useRef, useState } from \"react\";\nimport { nearest } from \"@react-md/utils\";\nimport { DEFAULT_SLIDER_MAX, DEFAULT_SLIDER_MIN, DEFAULT_SLIDER_STEP } from \"./constants\";\nimport { getJumpValue, getSteps } from \"./utils\";\n\nvar noop = function () {// do nothing\n};\n/**\n * This hook is used to control the value and behavior of the `RangeSlider`\n * component. The first argument will contain the current slider value while the\n * second argument will be all the props required to control the `RangeSlider`\n * component.\n *\n * @param defaultValue - An optional default value to use. When omitted, this\n * will be the `[min, max]` values\n * @param options - An object containing the `min` and `max` values allowed for\n * the slider as well as a `step` to indicate valid values between the `min` and\n * `max`.\n * @returns an ordered list containing the current value followed by the\n * `RangeSlider` props\n * @remarks \\@since 2.5.0\n */\n\n\nexport function useRangeSlider(defaultValue, _a) {\n  var _b = _a === void 0 ? {} : _a,\n      _c = _b.min,\n      min = _c === void 0 ? DEFAULT_SLIDER_MIN : _c,\n      _d = _b.max,\n      max = _d === void 0 ? DEFAULT_SLIDER_MAX : _d,\n      _e = _b.step,\n      step = _e === void 0 ? DEFAULT_SLIDER_STEP : _e,\n      propJump = _b.jump,\n      _f = _b.updateOn,\n      updateOn = _f === void 0 ? \"change\" : _f,\n      _g = _b.onChange,\n      onChange = _g === void 0 ? noop : _g;\n\n  var jump = useMemo(function () {\n    return getJumpValue(min, max, step, propJump);\n  }, [min, max, step, propJump]); // since the `currentValue` is a ref, this state is used to force a re-render\n  // to get the updated value from the ref.\n\n  var _h = useState([]),\n      hack = _h[1];\n\n  var _j = useState(defaultValue !== null && defaultValue !== void 0 ? defaultValue : [min, max]),\n      value = _j[0],\n      setValue = _j[1];\n\n  var currentValue = useRef(value);\n  var update = useCallback(function (_a) {\n    var index = _a.index,\n        type = _a.type;\n    /* istanbul ignore next */\n\n    if (process.env.NODE_ENV !== \"production\") {\n      if (index !== 0 && index !== 1) {\n        throw new TypeError(\"Thumb index must be 0 or 1.\");\n      }\n    }\n\n    setValue(function (_a) {\n      var thumb1Value = _a[0],\n          thumb2Value = _a[1];\n      var value;\n      var minValue = min;\n      var maxValue = max;\n\n      if (index === 0) {\n        value = thumb1Value;\n        maxValue = thumb2Value - step;\n      } else {\n        value = thumb2Value;\n        minValue = thumb1Value + step;\n      }\n\n      switch (type) {\n        case \"min\":\n          value = minValue;\n          break;\n\n        case \"max\":\n          value = maxValue;\n          break;\n\n        case \"increment\":\n          value += step;\n          break;\n\n        case \"decrement\":\n          value -= step;\n          break;\n\n        case \"increment-jump\":\n          value += jump;\n          break;\n\n        case \"decrement-jump\":\n          value -= jump;\n          break;\n      }\n\n      value = Math.max(minValue, Math.min(maxValue, value));\n      return index === 0 ? [value, thumb2Value] : [thumb1Value, value];\n    });\n  }, [jump, max, min, step]);\n  var increment = useCallback(function (index) {\n    return update({\n      index: index,\n      type: \"increment\"\n    });\n  }, [update]);\n  var incrementJump = useCallback(function (index) {\n    return update({\n      index: index,\n      type: \"increment-jump\"\n    });\n  }, [update]);\n  var decrement = useCallback(function (index) {\n    return update({\n      index: index,\n      type: \"decrement\"\n    });\n  }, [update]);\n  var decrementJump = useCallback(function (index) {\n    return update({\n      index: index,\n      type: \"decrement-jump\"\n    });\n  }, [update]);\n  var minimum = useCallback(function (index) {\n    return update({\n      index: index,\n      type: \"min\"\n    });\n  }, [update]);\n  var maximum = useCallback(function (index) {\n    return update({\n      index: index,\n      type: \"max\"\n    });\n  }, [update]);\n  var persist = useCallback(function () {\n    var _a = currentValue.current,\n        prev1 = _a[0],\n        prev2 = _a[1];\n\n    if (prev1 === value[0] && prev2 === value[1]) {\n      return;\n    }\n\n    onChange(value);\n    currentValue.current = value;\n    hack([]);\n  }, [onChange, value]);\n  var prev = useRef({\n    min: min,\n    max: max,\n    step: step\n  });\n\n  if (prev.current.min !== min || prev.current.max !== max || prev.current.step !== step) {\n    // ensure that if the `min`, `max`, or `step` value changes that the value\n    // is updated as well. Without this, there will be a runtime error if the\n    // value is not within the new range.\n    prev.current = {\n      min: min,\n      max: max,\n      step: step\n    };\n    var steps = getSteps(min, max, step);\n    var nextValue = [nearest(value[0], min, max, steps), nearest(value[1], min, max, steps)];\n    currentValue.current = nextValue;\n    setValue(nextValue);\n  }\n\n  if (updateOn === \"change\" && currentValue.current !== value) {\n    currentValue.current = value;\n  }\n\n  return [currentValue.current, {\n    min: min,\n    max: max,\n    step: step,\n    value: value,\n    minimum: minimum,\n    maximum: maximum,\n    increment: increment,\n    incrementJump: incrementJump,\n    decrement: decrement,\n    decrementJump: decrementJump,\n    persist: persist,\n    setValue: setValue\n  }];\n}","map":{"version":3,"sources":["../../src/slider/useRangeSlider.ts"],"names":[],"mappings":"AAAA,SAAS,WAAT,EAAsB,OAAtB,EAA+B,MAA/B,EAAuC,QAAvC,QAAuD,OAAvD;AACA,SAAS,OAAT,QAAwB,iBAAxB;AAEA,SACE,kBADF,EAEE,kBAFF,EAGE,mBAHF,QAIO,aAJP;AAaA,SAAS,YAAT,EAAuB,QAAvB,QAAuC,SAAvC;;AAEA,IAAM,IAAI,GAAG,YAAA,CACX;AACD,CAFD;AAwDA;;;;;;;;;;;;;;AAcG;;;AACH,OAAM,SAAU,cAAV,CACJ,YADI,EAEJ,EAFI,EASyB;MAP7B,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAO2B,EAP3B,GAO6B,E;MAN3B,EAAA,GAAA,EAAA,CAAA,G;MAAA,GAAG,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,kBAAH,GAAqB,E;MACxB,EAAA,GAAA,EAAA,CAAA,G;MAAA,GAAG,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,kBAAH,GAAqB,E;MACxB,EAAA,GAAA,EAAA,CAAA,I;MAAA,IAAI,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,mBAAH,GAAsB,E;MACpB,QAAQ,GAAA,EAAA,CAAA,I;MACd,EAAA,GAAA,EAAA,CAAA,Q;MAAA,QAAQ,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,QAAH,GAAW,E;MACnB,EAAA,GAAA,EAAA,CAAA,Q;MAAA,QAAQ,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,IAAH,GAAO,E;;AAGjB,MAAM,IAAI,GAAG,OAAO,CAAC,YAAA;AAAM,WAAA,YAAY,CAAC,GAAD,EAAM,GAAN,EAAW,IAAX,EAAZ,QAAY,CAAZ;AAAsC,GAA7C,EAA+C,CACjE,GADiE,EAEjE,GAFiE,EAGjE,IAHiE,EAIjE,QAJiE,CAA/C,CAApB,CAF6B,CAS7B;AACA;;AACM,MAAA,EAAA,GAAW,QAAQ,CAAC,EAAD,CAAnB;AAAA,MAAG,IAAI,GAAA,EAAA,CAAA,CAAA,CAAP;;AACA,MAAA,EAAA,GAAoB,QAAQ,CAChC,YAAY,KAAA,IAAZ,IAAA,YAAY,KAAA,KAAA,CAAZ,GAAA,YAAA,GAAgB,CAAC,GAAD,EAAM,GAAN,CADgB,CAA5B;AAAA,MAAC,KAAK,GAAA,EAAA,CAAA,CAAA,CAAN;AAAA,MAAQ,QAAQ,GAAA,EAAA,CAAA,CAAA,CAAhB;;AAGN,MAAM,YAAY,GAAG,MAAM,CAAC,KAAD,CAA3B;AAEA,MAAM,MAAM,GAAG,WAAW,CACxB,UAAC,EAAD,EAA+B;QAA5B,KAAK,GAAA,EAAA,CAAA,K;QAAE,IAAI,GAAA,EAAA,CAAA,I;AACZ;;AACA,QAAI,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAI,KAAK,KAAK,CAAV,IAAe,KAAK,KAAK,CAA7B,EAAgC;AAC9B,cAAM,IAAI,SAAJ,CAAc,6BAAd,CAAN;AACD;AACF;;AAED,IAAA,QAAQ,CAAC,UAAC,EAAD,EAA2B;UAAzB,WAAW,GAAA,EAAA,CAAA,CAAA,C;UAAE,WAAW,GAAA,EAAA,CAAA,CAAA,C;AACjC,UAAI,KAAJ;AACA,UAAI,QAAQ,GAAG,GAAf;AACA,UAAI,QAAQ,GAAG,GAAf;;AACA,UAAI,KAAK,KAAK,CAAd,EAAiB;AACf,QAAA,KAAK,GAAG,WAAR;AACA,QAAA,QAAQ,GAAG,WAAW,GAAG,IAAzB;AACD,OAHD,MAGO;AACL,QAAA,KAAK,GAAG,WAAR;AACA,QAAA,QAAQ,GAAG,WAAW,GAAG,IAAzB;AACD;;AAED,cAAQ,IAAR;AACE,aAAK,KAAL;AACE,UAAA,KAAK,GAAG,QAAR;AACA;;AACF,aAAK,KAAL;AACE,UAAA,KAAK,GAAG,QAAR;AACA;;AACF,aAAK,WAAL;AACE,UAAA,KAAK,IAAI,IAAT;AACA;;AACF,aAAK,WAAL;AACE,UAAA,KAAK,IAAI,IAAT;AACA;;AACF,aAAK,gBAAL;AACE,UAAA,KAAK,IAAI,IAAT;AACA;;AACF,aAAK,gBAAL;AACE,UAAA,KAAK,IAAI,IAAT;AACA;AAlBJ;;AAqBA,MAAA,KAAK,GAAG,IAAI,CAAC,GAAL,CAAS,QAAT,EAAmB,IAAI,CAAC,GAAL,CAAS,QAAT,EAAmB,KAAnB,CAAnB,CAAR;AAEA,aAAO,KAAK,KAAK,CAAV,GAAc,CAAC,KAAD,EAAQ,WAAR,CAAd,GAAqC,CAAC,WAAD,EAAc,KAAd,CAA5C;AACD,KApCO,CAAR;AAqCD,GA9CuB,EA+CxB,CAAC,IAAD,EAAO,GAAP,EAAY,GAAZ,EAAiB,IAAjB,CA/CwB,CAA1B;AAiDA,MAAM,SAAS,GAAG,WAAW,CAC3B,UAAC,KAAD,EAAkB;AAAK,WAAA,MAAM,CAAC;AAAE,MAAA,KAAK,EAAA,KAAP;AAAS,MAAA,IAAI,EAApB;AAAO,KAAD,CAAN;AAAoC,GADhC,EAE3B,CAAC,MAAD,CAF2B,CAA7B;AAIA,MAAM,aAAa,GAAG,WAAW,CAC/B,UAAC,KAAD,EAAkB;AAAK,WAAA,MAAM,CAAC;AAAE,MAAA,KAAK,EAAA,KAAP;AAAS,MAAA,IAAI,EAApB;AAAO,KAAD,CAAN;AAAyC,GADjC,EAE/B,CAAC,MAAD,CAF+B,CAAjC;AAIA,MAAM,SAAS,GAAG,WAAW,CAC3B,UAAC,KAAD,EAAkB;AAAK,WAAA,MAAM,CAAC;AAAE,MAAA,KAAK,EAAA,KAAP;AAAS,MAAA,IAAI,EAApB;AAAO,KAAD,CAAN;AAAoC,GADhC,EAE3B,CAAC,MAAD,CAF2B,CAA7B;AAIA,MAAM,aAAa,GAAG,WAAW,CAC/B,UAAC,KAAD,EAAkB;AAAK,WAAA,MAAM,CAAC;AAAE,MAAA,KAAK,EAAA,KAAP;AAAS,MAAA,IAAI,EAApB;AAAO,KAAD,CAAN;AAAyC,GADjC,EAE/B,CAAC,MAAD,CAF+B,CAAjC;AAIA,MAAM,OAAO,GAAG,WAAW,CACzB,UAAC,KAAD,EAAkB;AAAK,WAAA,MAAM,CAAC;AAAE,MAAA,KAAK,EAAA,KAAP;AAAS,MAAA,IAAI,EAApB;AAAO,KAAD,CAAN;AAA8B,GAD5B,EAEzB,CAAC,MAAD,CAFyB,CAA3B;AAIA,MAAM,OAAO,GAAG,WAAW,CACzB,UAAC,KAAD,EAAkB;AAAK,WAAA,MAAM,CAAC;AAAE,MAAA,KAAK,EAAA,KAAP;AAAS,MAAA,IAAI,EAApB;AAAO,KAAD,CAAN;AAA8B,GAD5B,EAEzB,CAAC,MAAD,CAFyB,CAA3B;AAKA,MAAM,OAAO,GAAG,WAAW,CAAC,YAAA;AACpB,QAAA,EAAA,GAAiB,YAAY,CAAC,OAA9B;AAAA,QAAC,KAAK,GAAA,EAAA,CAAA,CAAA,CAAN;AAAA,QAAQ,KAAK,GAAA,EAAA,CAAA,CAAA,CAAb;;AACN,QAAI,KAAK,KAAK,KAAK,CAAC,CAAD,CAAf,IAAsB,KAAK,KAAK,KAAK,CAAC,CAAD,CAAzC,EAA8C;AAC5C;AACD;;AAED,IAAA,QAAQ,CAAC,KAAD,CAAR;AACA,IAAA,YAAY,CAAC,OAAb,GAAuB,KAAvB;AACA,IAAA,IAAI,CAAC,EAAD,CAAJ;AACD,GAT0B,EASxB,CAAC,QAAD,EAAW,KAAX,CATwB,CAA3B;AAWA,MAAM,IAAI,GAAG,MAAM,CAAC;AAAE,IAAA,GAAG,EAAA,GAAL;AAAO,IAAA,GAAG,EAAA,GAAV;AAAY,IAAA,IAAI,EAAA;AAAhB,GAAD,CAAnB;;AACA,MACE,IAAI,CAAC,OAAL,CAAa,GAAb,KAAqB,GAArB,IACA,IAAI,CAAC,OAAL,CAAa,GAAb,KAAqB,GADrB,IAEA,IAAI,CAAC,OAAL,CAAa,IAAb,KAAsB,IAHxB,EAIE;AACA;AACA;AACA;AACA,IAAA,IAAI,CAAC,OAAL,GAAe;AAAE,MAAA,GAAG,EAAA,GAAL;AAAO,MAAA,GAAG,EAAA,GAAV;AAAY,MAAA,IAAI,EAAA;AAAhB,KAAf;AACA,QAAM,KAAK,GAAG,QAAQ,CAAC,GAAD,EAAM,GAAN,EAAW,IAAX,CAAtB;AACA,QAAM,SAAS,GAAqB,CAClC,OAAO,CAAC,KAAK,CAAC,CAAD,CAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,KAArB,CAD2B,EAElC,OAAO,CAAC,KAAK,CAAC,CAAD,CAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,KAArB,CAF2B,CAApC;AAIA,IAAA,YAAY,CAAC,OAAb,GAAuB,SAAvB;AACA,IAAA,QAAQ,CAAC,SAAD,CAAR;AACD;;AAED,MAAI,QAAQ,KAAK,QAAb,IAAyB,YAAY,CAAC,OAAb,KAAyB,KAAtD,EAA6D;AAC3D,IAAA,YAAY,CAAC,OAAb,GAAuB,KAAvB;AACD;;AAED,SAAO,CACL,YAAY,CAAC,OADR,EAEL;AACE,IAAA,GAAG,EAAA,GADL;AAEE,IAAA,GAAG,EAAA,GAFL;AAGE,IAAA,IAAI,EAAA,IAHN;AAIE,IAAA,KAAK,EAAA,KAJP;AAKE,IAAA,OAAO,EAAA,OALT;AAME,IAAA,OAAO,EAAA,OANT;AAOE,IAAA,SAAS,EAAA,SAPX;AAQE,IAAA,aAAa,EAAA,aARf;AASE,IAAA,SAAS,EAAA,SATX;AAUE,IAAA,aAAa,EAAA,aAVf;AAWE,IAAA,OAAO,EAAA,OAXT;AAYE,IAAA,QAAQ,EAAA;AAZV,GAFK,CAAP;AAiBD","sourceRoot":"","sourcesContent":["import { useCallback, useMemo, useRef, useState } from \"react\";\nimport { nearest } from \"@react-md/utils\";\nimport { DEFAULT_SLIDER_MAX, DEFAULT_SLIDER_MIN, DEFAULT_SLIDER_STEP, } from \"./constants\";\nimport { getJumpValue, getSteps } from \"./utils\";\nvar noop = function () {\n    // do nothing\n};\n/**\n * This hook is used to control the value and behavior of the `RangeSlider`\n * component. The first argument will contain the current slider value while the\n * second argument will be all the props required to control the `RangeSlider`\n * component.\n *\n * @param defaultValue - An optional default value to use. When omitted, this\n * will be the `[min, max]` values\n * @param options - An object containing the `min` and `max` values allowed for\n * the slider as well as a `step` to indicate valid values between the `min` and\n * `max`.\n * @returns an ordered list containing the current value followed by the\n * `RangeSlider` props\n * @remarks \\@since 2.5.0\n */\nexport function useRangeSlider(defaultValue, _a) {\n    var _b = _a === void 0 ? {} : _a, _c = _b.min, min = _c === void 0 ? DEFAULT_SLIDER_MIN : _c, _d = _b.max, max = _d === void 0 ? DEFAULT_SLIDER_MAX : _d, _e = _b.step, step = _e === void 0 ? DEFAULT_SLIDER_STEP : _e, propJump = _b.jump, _f = _b.updateOn, updateOn = _f === void 0 ? \"change\" : _f, _g = _b.onChange, onChange = _g === void 0 ? noop : _g;\n    var jump = useMemo(function () { return getJumpValue(min, max, step, propJump); }, [\n        min,\n        max,\n        step,\n        propJump,\n    ]);\n    // since the `currentValue` is a ref, this state is used to force a re-render\n    // to get the updated value from the ref.\n    var _h = useState([]), hack = _h[1];\n    var _j = useState(defaultValue !== null && defaultValue !== void 0 ? defaultValue : [min, max]), value = _j[0], setValue = _j[1];\n    var currentValue = useRef(value);\n    var update = useCallback(function (_a) {\n        var index = _a.index, type = _a.type;\n        /* istanbul ignore next */\n        if (process.env.NODE_ENV !== \"production\") {\n            if (index !== 0 && index !== 1) {\n                throw new TypeError(\"Thumb index must be 0 or 1.\");\n            }\n        }\n        setValue(function (_a) {\n            var thumb1Value = _a[0], thumb2Value = _a[1];\n            var value;\n            var minValue = min;\n            var maxValue = max;\n            if (index === 0) {\n                value = thumb1Value;\n                maxValue = thumb2Value - step;\n            }\n            else {\n                value = thumb2Value;\n                minValue = thumb1Value + step;\n            }\n            switch (type) {\n                case \"min\":\n                    value = minValue;\n                    break;\n                case \"max\":\n                    value = maxValue;\n                    break;\n                case \"increment\":\n                    value += step;\n                    break;\n                case \"decrement\":\n                    value -= step;\n                    break;\n                case \"increment-jump\":\n                    value += jump;\n                    break;\n                case \"decrement-jump\":\n                    value -= jump;\n                    break;\n            }\n            value = Math.max(minValue, Math.min(maxValue, value));\n            return index === 0 ? [value, thumb2Value] : [thumb1Value, value];\n        });\n    }, [jump, max, min, step]);\n    var increment = useCallback(function (index) { return update({ index: index, type: \"increment\" }); }, [update]);\n    var incrementJump = useCallback(function (index) { return update({ index: index, type: \"increment-jump\" }); }, [update]);\n    var decrement = useCallback(function (index) { return update({ index: index, type: \"decrement\" }); }, [update]);\n    var decrementJump = useCallback(function (index) { return update({ index: index, type: \"decrement-jump\" }); }, [update]);\n    var minimum = useCallback(function (index) { return update({ index: index, type: \"min\" }); }, [update]);\n    var maximum = useCallback(function (index) { return update({ index: index, type: \"max\" }); }, [update]);\n    var persist = useCallback(function () {\n        var _a = currentValue.current, prev1 = _a[0], prev2 = _a[1];\n        if (prev1 === value[0] && prev2 === value[1]) {\n            return;\n        }\n        onChange(value);\n        currentValue.current = value;\n        hack([]);\n    }, [onChange, value]);\n    var prev = useRef({ min: min, max: max, step: step });\n    if (prev.current.min !== min ||\n        prev.current.max !== max ||\n        prev.current.step !== step) {\n        // ensure that if the `min`, `max`, or `step` value changes that the value\n        // is updated as well. Without this, there will be a runtime error if the\n        // value is not within the new range.\n        prev.current = { min: min, max: max, step: step };\n        var steps = getSteps(min, max, step);\n        var nextValue = [\n            nearest(value[0], min, max, steps),\n            nearest(value[1], min, max, steps),\n        ];\n        currentValue.current = nextValue;\n        setValue(nextValue);\n    }\n    if (updateOn === \"change\" && currentValue.current !== value) {\n        currentValue.current = value;\n    }\n    return [\n        currentValue.current,\n        {\n            min: min,\n            max: max,\n            step: step,\n            value: value,\n            minimum: minimum,\n            maximum: maximum,\n            increment: increment,\n            incrementJump: incrementJump,\n            decrement: decrement,\n            decrementJump: decrementJump,\n            persist: persist,\n            setValue: setValue,\n        },\n    ];\n}\n//# sourceMappingURL=useRangeSlider.js.map"]},"metadata":{},"sourceType":"module"}