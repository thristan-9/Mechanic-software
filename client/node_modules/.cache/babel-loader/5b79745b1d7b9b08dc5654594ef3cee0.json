{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\nvar block = bem(\"rmd-text-field-addon\");\n/**\n * This component is used to add an an icon before or after the text field with\n * correct styling.\n */\n\nexport var TextFieldAddon = forwardRef(function TextFieldAddon(_a, ref) {\n  var children = _a.children,\n      className = _a.className,\n      _b = _a.presentational,\n      presentational = _b === void 0 ? true : _b,\n      props = __rest(_a, [\"children\", \"className\", \"presentational\"]);\n\n  if (!children) {\n    return null;\n  }\n\n  return React.createElement(\"span\", __assign({}, props, {\n    ref: ref,\n    className: cn(block({\n      presentational: presentational\n    }), className)\n  }), children);\n});\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== \"production\") {\n  try {\n    var PropTypes = require(\"prop-types\");\n\n    TextFieldAddon.propTypes = {\n      className: PropTypes.string,\n      children: PropTypes.node,\n      presentational: PropTypes.bool\n    };\n  } catch (e) {}\n}","map":{"version":3,"sources":["../../src/text-field/TextFieldAddon.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,IAAgB,UAAhB,QAAkD,OAAlD;AACA,OAAO,EAAP,MAAe,YAAf;AACA,SAAS,GAAT,QAAoB,iBAApB;AAUA,IAAM,KAAK,GAAG,GAAG,CAAC,sBAAD,CAAjB;AAEA;;;AAGG;;AACH,OAAO,IAAM,cAAc,GAAG,UAAU,CACtC,SAAS,cAAT,CACE,EADF,EAEE,GAFF,EAEK;AADD,MAAA,QAAQ,GAAA,EAAA,CAAA,QAAR;AAAA,MAAU,SAAS,GAAA,EAAA,CAAA,SAAnB;AAAA,MAAqB,EAAA,GAAA,EAAA,CAAA,cAArB;AAAA,MAAqB,cAAc,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,IAAH,GAAO,EAA1C;AAAA,MAA+C,KAAK,GAAA,MAAA,CAAA,EAAA,EAAtD,CAAA,UAAA,EAAA,WAAA,EAAA,gBAAA,CAAsD,CAApD;;AAGF,MAAI,CAAC,QAAL,EAAe;AACb,WAAO,IAAP;AACD;;AAED,SACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,QAAA,CAAA,EAAA,EACM,KADN,EACW;AACT,IAAA,GAAG,EAAE,GADI;AAET,IAAA,SAAS,EAAE,EAAE,CAAC,KAAK,CAAC;AAAE,MAAA,cAAc,EAAA;AAAhB,KAAD,CAAN,EAA4B,SAA5B;AAFJ,GADX,CAAA,EAKG,QALH,CADF;AASD,CAlBqC,CAAjC;AAqBP;;AACA,IAAI,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,MAAI;AACF,QAAM,SAAS,GAAG,OAAO,CAAC,YAAD,CAAzB;;AAEA,IAAA,cAAc,CAAC,SAAf,GAA2B;AACzB,MAAA,SAAS,EAAE,SAAS,CAAC,MADI;AAEzB,MAAA,QAAQ,EAAE,SAAS,CAAC,IAFK;AAGzB,MAAA,cAAc,EAAE,SAAS,CAAC;AAHD,KAA3B;AAKD,GARD,CAQE,OAAO,CAAP,EAAU,CAAE;AACf","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\nvar block = bem(\"rmd-text-field-addon\");\n/**\n * This component is used to add an an icon before or after the text field with\n * correct styling.\n */\nexport var TextFieldAddon = forwardRef(function TextFieldAddon(_a, ref) {\n    var children = _a.children, className = _a.className, _b = _a.presentational, presentational = _b === void 0 ? true : _b, props = __rest(_a, [\"children\", \"className\", \"presentational\"]);\n    if (!children) {\n        return null;\n    }\n    return (React.createElement(\"span\", __assign({}, props, { ref: ref, className: cn(block({ presentational: presentational }), className) }), children));\n});\n/* istanbul ignore next */\nif (process.env.NODE_ENV !== \"production\") {\n    try {\n        var PropTypes = require(\"prop-types\");\n        TextFieldAddon.propTypes = {\n            className: PropTypes.string,\n            children: PropTypes.node,\n            presentational: PropTypes.bool,\n        };\n    }\n    catch (e) { }\n}\n//# sourceMappingURL=TextFieldAddon.js.map"]},"metadata":{},"sourceType":"module"}