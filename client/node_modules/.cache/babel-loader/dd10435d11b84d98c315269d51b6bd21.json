{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from \"react\";\nimport cn from \"classnames\";\nimport { Tooltip } from \"@react-md/tooltip\";\nimport { bem } from \"@react-md/utils\";\nvar styles = bem(\"rmd-slider-value\");\nvar HORIZONTAL_CLASS_NAMES = {\n  enter: \"rmd-slider-value--h-off\",\n  enterActive: \"rmd-slider-value--h-on rmd-slider-value--animate\",\n  exit: \"rmd-slider-value--animate\",\n  exitActive: \"rmd-slider-value--h-off\"\n};\nvar VERTICAL_CLASS_NAMES = {\n  enter: \"rmd-slider-value--v-off\",\n  enterActive: \"rmd-slider-value--v-on rmd-slider-value--animate\",\n  exit: \"rmd-slider-value--animate\",\n  exitActive: \"rmd-slider-value--v-off\"\n};\n/**\n * This component creates the \"discrete\" slider thumb value by rendering a\n * tooltip when needed.\n *\n * @remarks \\@since 2.5.0\n * @internal\n */\n\nexport function SliderValue(_a) {\n  var _b;\n\n  var index = _a.index,\n      animate = _a.animate,\n      discrete = _a.discrete,\n      vertical = _a.vertical,\n      children = _a.children,\n      className = _a.className,\n      _c = _a.portal,\n      portal = _c === void 0 ? false : _c,\n      props = __rest(_a, [\"index\", \"animate\", \"discrete\", \"vertical\", \"children\", \"className\", \"portal\"]);\n\n  if (!discrete) {\n    return null;\n  }\n\n  return React.createElement(Tooltip, __assign({}, props, {\n    portal: portal,\n    className: cn(styles({\n      h: !vertical,\n      v: vertical\n    }), (_b = {\n      \"rmd-slider-thumb--animate\": animate\n    }, _b[\"rmd-slider-thumb--h\" + (index + 1)] = !vertical, _b[\"rmd-slider-thumb--v\" + (index + 1)] = vertical, _b), className),\n    classNames: vertical ? VERTICAL_CLASS_NAMES : HORIZONTAL_CLASS_NAMES,\n    position: vertical ? \"left\" : \"above\",\n    dense: true\n  }), children);\n}","map":{"version":3,"sources":["../../src/slider/SliderValue.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,MAAoC,OAApC;AACA,OAAO,EAAP,MAAe,YAAf;AAEA,SAAS,OAAT,QAAsC,mBAAtC;AACA,SAAS,GAAT,QAAoB,iBAApB;AAIA,IAAM,MAAM,GAAG,GAAG,CAAC,kBAAD,CAAlB;AAEA,IAAM,sBAAsB,GAA4B;AACtD,EAAA,KAAK,EAAE,yBAD+C;AAEtD,EAAA,WAAW,EAAE,kDAFyC;AAGtD,EAAA,IAAI,EAAE,2BAHgD;AAItD,EAAA,UAAU,EAAE;AAJ0C,CAAxD;AAOA,IAAM,oBAAoB,GAA4B;AACpD,EAAA,KAAK,EAAE,yBAD6C;AAEpD,EAAA,WAAW,EAAE,kDAFuC;AAGpD,EAAA,IAAI,EAAE,2BAH8C;AAIpD,EAAA,UAAU,EAAE;AAJwC,CAAtD;AAkBA;;;;;;AAMG;;AACH,OAAM,SAAU,WAAV,CAAsB,EAAtB,EASa;;;AARjB,MAAA,KAAK,GAAA,EAAA,CAAA,KAAL;AAAA,MACA,OAAO,GAAA,EAAA,CAAA,OADP;AAAA,MAEA,QAAQ,GAAA,EAAA,CAAA,QAFR;AAAA,MAGA,QAAQ,GAAA,EAAA,CAAA,QAHR;AAAA,MAIA,QAAQ,GAAA,EAAA,CAAA,QAJR;AAAA,MAKA,SAAS,GAAA,EAAA,CAAA,SALT;AAAA,MAMA,EAAA,GAAA,EAAA,CAAA,MANA;AAAA,MAMA,MAAM,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,EANd;AAAA,MAOG,KAAK,GAAA,MAAA,CAAA,EAAA,EARkB,CAAA,OAAA,EAAA,SAAA,EAAA,UAAA,EAAA,UAAA,EAAA,UAAA,EAAA,WAAA,EAAA,QAAA,CAQlB,CAPR;;AASA,MAAI,CAAC,QAAL,EAAe;AACb,WAAO,IAAP;AACD;;AAED,SACE,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ,QAAA,CAAA,EAAA,EACF,KADE,EACG;AACT,IAAA,MAAM,EAAE,MADC;AAET,IAAA,SAAS,EAAE,EAAE,CACX,MAAM,CAAC;AACL,MAAA,CAAC,EAAE,CAAC,QADC;AAEL,MAAA,CAAC,EAAE;AAFE,KAAD,CADK,GAIT,EAAA,GAAA;AAEA,mCAA6B;AAF7B,KAAA,EAGA,EAAA,CAAC,yBAAsB,KAAK,GAAG,CAA9B,CAAD,CAAA,GAAqC,CAAC,QAHtC,EAIA,EAAA,CAAC,yBAAsB,KAAK,GAAG,CAA9B,CAAD,CAAA,GAAqC,QAJrC,E,EAJS,GAUX,SAVW,CAFJ;AAcT,IAAA,UAAU,EAAE,QAAQ,GAAG,oBAAH,GAA0B,sBAdrC;AAeT,IAAA,QAAQ,EAAE,QAAQ,GAAG,MAAH,GAAY,OAfrB;AAgBT,IAAA,KAAK,EAAA;AAhBI,GADH,CAAR,EAmBG,QAnBH,CADF;AAuBD","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from \"react\";\nimport cn from \"classnames\";\nimport { Tooltip } from \"@react-md/tooltip\";\nimport { bem } from \"@react-md/utils\";\nvar styles = bem(\"rmd-slider-value\");\nvar HORIZONTAL_CLASS_NAMES = {\n    enter: \"rmd-slider-value--h-off\",\n    enterActive: \"rmd-slider-value--h-on rmd-slider-value--animate\",\n    exit: \"rmd-slider-value--animate\",\n    exitActive: \"rmd-slider-value--h-off\",\n};\nvar VERTICAL_CLASS_NAMES = {\n    enter: \"rmd-slider-value--v-off\",\n    enterActive: \"rmd-slider-value--v-on rmd-slider-value--animate\",\n    exit: \"rmd-slider-value--animate\",\n    exitActive: \"rmd-slider-value--v-off\",\n};\n/**\n * This component creates the \"discrete\" slider thumb value by rendering a\n * tooltip when needed.\n *\n * @remarks \\@since 2.5.0\n * @internal\n */\nexport function SliderValue(_a) {\n    var _b;\n    var index = _a.index, animate = _a.animate, discrete = _a.discrete, vertical = _a.vertical, children = _a.children, className = _a.className, _c = _a.portal, portal = _c === void 0 ? false : _c, props = __rest(_a, [\"index\", \"animate\", \"discrete\", \"vertical\", \"children\", \"className\", \"portal\"]);\n    if (!discrete) {\n        return null;\n    }\n    return (React.createElement(Tooltip, __assign({}, props, { portal: portal, className: cn(styles({\n            h: !vertical,\n            v: vertical,\n        }), (_b = {\n                \"rmd-slider-thumb--animate\": animate\n            },\n            _b[\"rmd-slider-thumb--h\" + (index + 1)] = !vertical,\n            _b[\"rmd-slider-thumb--v\" + (index + 1)] = vertical,\n            _b), className), classNames: vertical ? VERTICAL_CLASS_NAMES : HORIZONTAL_CLASS_NAMES, position: vertical ? \"left\" : \"above\", dense: true }), children));\n}\n//# sourceMappingURL=SliderValue.js.map"]},"metadata":{},"sourceType":"module"}