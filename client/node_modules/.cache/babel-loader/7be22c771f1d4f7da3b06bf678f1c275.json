{"ast":null,"code":"import React from \"react\";\nimport { Portal } from \"./Portal\";\n/**\n * This is a very simple component that is used in other places within react-md\n * to conditionally render the children within a portal or not based on general\n * portal config props.\n */\n\nexport function ConditionalPortal(_a) {\n  var portal = _a.portal,\n      portalInto = _a.portalInto,\n      portalIntoId = _a.portalIntoId,\n      children = _a.children;\n\n  if (!portal && !portalInto && !portalIntoId) {\n    return children;\n  }\n\n  return React.createElement(Portal, {\n    into: portalInto,\n    intoId: portalIntoId\n  }, children);\n}\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== \"production\") {\n  try {\n    var PropTypes = require(\"prop-types\");\n\n    ConditionalPortal.propTypes = {\n      portal: PropTypes.bool,\n      portalInto: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.object]),\n      portalIntoId: PropTypes.string,\n      children: PropTypes.node\n    };\n  } catch (e) {}\n}","map":{"version":3,"sources":["../src/ConditionalPortal.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAP,MAAoC,OAApC;AAGA,SAAS,MAAT,QAAuB,UAAvB;AA8BA;;;;AAIG;;AACH,OAAM,SAAU,iBAAV,CAA4B,EAA5B,EAKmB;MAJvB,MAAM,GAAA,EAAA,CAAA,M;MACN,UAAU,GAAA,EAAA,CAAA,U;MACV,YAAY,GAAA,EAAA,CAAA,Y;MACZ,QAAQ,GAAA,EAAA,CAAA,Q;;AAER,MAAI,CAAC,MAAD,IAAW,CAAC,UAAZ,IAA0B,CAAC,YAA/B,EAA6C;AAC3C,WAAO,QAAP;AACD;;AAED,SACE,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO;AAAC,IAAA,IAAI,EAAE,UAAP;AAAmB,IAAA,MAAM,EAAE;AAA3B,GAAP,EACG,QADH,CADF;AAKD;AAED;;AACA,IAAI,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,MAAI;AACF,QAAM,SAAS,GAAG,OAAO,CAAC,YAAD,CAAzB;;AAEA,IAAA,iBAAiB,CAAC,SAAlB,GAA8B;AAC5B,MAAA,MAAM,EAAE,SAAS,CAAC,IADU;AAE5B,MAAA,UAAU,EAAE,SAAS,CAAC,SAAV,CAAoB,CAC9B,SAAS,CAAC,MADoB,EAE9B,SAAS,CAAC,IAFoB,EAG9B,SAAS,CAAC,MAHoB,CAApB,CAFgB;AAO5B,MAAA,YAAY,EAAE,SAAS,CAAC,MAPI;AAQ5B,MAAA,QAAQ,EAAE,SAAS,CAAC;AARQ,KAA9B;AAUD,GAbD,CAaE,OAAO,CAAP,EAAU,CAAE;AACf","sourceRoot":"","sourcesContent":["import React from \"react\";\nimport { Portal } from \"./Portal\";\n/**\n * This is a very simple component that is used in other places within react-md\n * to conditionally render the children within a portal or not based on general\n * portal config props.\n */\nexport function ConditionalPortal(_a) {\n    var portal = _a.portal, portalInto = _a.portalInto, portalIntoId = _a.portalIntoId, children = _a.children;\n    if (!portal && !portalInto && !portalIntoId) {\n        return children;\n    }\n    return (React.createElement(Portal, { into: portalInto, intoId: portalIntoId }, children));\n}\n/* istanbul ignore next */\nif (process.env.NODE_ENV !== \"production\") {\n    try {\n        var PropTypes = require(\"prop-types\");\n        ConditionalPortal.propTypes = {\n            portal: PropTypes.bool,\n            portalInto: PropTypes.oneOfType([\n                PropTypes.string,\n                PropTypes.func,\n                PropTypes.object,\n            ]),\n            portalIntoId: PropTypes.string,\n            children: PropTypes.node,\n        };\n    }\n    catch (e) { }\n}\n//# sourceMappingURL=ConditionalPortal.js.map"]},"metadata":{},"sourceType":"module"}