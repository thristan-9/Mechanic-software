{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { useIcon } from \"@react-md/icon\";\nimport { ListItem } from \"@react-md/list\";\nimport { bem } from \"@react-md/utils\";\nimport { InputToggleIcon } from \"../toggle/InputToggleIcon\";\nimport { SwitchTrack } from \"../toggle/SwitchTrack\";\nvar styles = bem(\"rmd-input-toggle-menu-item\");\n/**\n * This is a low-level component that should probably not be used externally and\n * instead the `MenuItemCheckbox`, `MenuItemRadio`, or `MenuItemSwitch` should\n * be used instead.\n *\n * @see {@link MenuItemCheckbox} for checkbox examples\n * @see {@link MenuItemRadio} for radio examples\n * @see {@link MenuItemSwitch} for switch examples\n * @remarks \\@since 2.8.0\n */\n\nexport var MenuItemInputToggle = forwardRef(function MenuItemInputToggle(_a, ref) {\n  var children = _a.children,\n      _b = _a.tabIndex,\n      tabIndex = _b === void 0 ? -1 : _b,\n      checked = _a.checked,\n      type = _a.type,\n      propIcon = _a.icon,\n      _c = _a.iconAfter,\n      iconAfter = _c === void 0 ? false : _c,\n      addon = _a.addon,\n      addonType = _a.addonType,\n      addonPosition = _a.addonPosition,\n      onClick = _a.onClick,\n      onCheckedChange = _a.onCheckedChange,\n      _d = _a.disabled,\n      disabled = _d === void 0 ? false : _d,\n      className = _a.className,\n      props = __rest(_a, [\"children\", \"tabIndex\", \"checked\", \"type\", \"icon\", \"iconAfter\", \"addon\", \"addonType\", \"addonPosition\", \"onClick\", \"onCheckedChange\", \"disabled\", \"className\"]);\n\n  var icon = useIcon(type === \"radio\" ? \"radio\" : \"checkbox\", propIcon);\n\n  if (type === \"switch\" && typeof propIcon === \"undefined\") {\n    icon = React.createElement(SwitchTrack, {\n      checked: checked\n    });\n  } else if (icon && type !== \"switch\") {\n    icon = React.createElement(\"span\", {\n      className: \"rmd-toggle\"\n    }, React.createElement(InputToggleIcon, {\n      circle: type === \"radio\",\n      disabled: disabled,\n      overlay: true,\n      checked: checked\n    }, icon));\n  }\n\n  var leftAddon;\n  var leftAddonType;\n  var leftAddonPosition;\n  var rightAddon;\n  var rightAddonType;\n  var rightAddonPosition;\n\n  if (iconAfter) {\n    leftAddon = addon;\n    leftAddonType = addonType;\n    leftAddonPosition = addonPosition;\n    rightAddon = icon;\n  } else {\n    leftAddon = icon;\n    rightAddon = addon;\n    rightAddonType = addonType;\n    rightAddonPosition = addonPosition;\n  }\n\n  return React.createElement(ListItem, __assign({}, props, {\n    disableRipple: true,\n    \"aria-disabled\": disabled || undefined,\n    \"aria-checked\": checked,\n    role: type === \"radio\" ? \"menuitemradio\" : \"menuitemcheckbox\",\n    onClick: function (event) {\n      onClick === null || onClick === void 0 ? void 0 : onClick(event);\n      onCheckedChange(!checked, event);\n    },\n    ref: ref,\n    className: cn(styles({\n      switch: type === \"switch\"\n    }), className),\n    tabIndex: tabIndex,\n    leftAddon: leftAddon,\n    leftAddonType: leftAddonType,\n    leftAddonPosition: leftAddonPosition,\n    rightAddon: rightAddon,\n    rightAddonType: rightAddonType,\n    rightAddonPosition: rightAddonPosition\n  }), children);\n});\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== \"production\") {\n  try {\n    var PropTypes = require(\"prop-types\");\n\n    MenuItemInputToggle.propTypes = {\n      id: PropTypes.string.isRequired,\n      checked: PropTypes.bool.isRequired,\n      onCheckedChange: PropTypes.func.isRequired,\n      type: PropTypes.oneOf([\"checkbox\", \"radio\", \"switch\"]).isRequired,\n      disabled: PropTypes.bool,\n      icon: PropTypes.node,\n      iconAfter: PropTypes.bool,\n      addon: PropTypes.node,\n      addonType: PropTypes.oneOf([\"icon\", \"avatar\", \"media\", \"large-media\"]),\n      addonPosition: PropTypes.oneOf([\"top\", \"middle\", \"bottom\"])\n    };\n  } catch (e) {}\n}","map":{"version":3,"sources":["../../src/menu/MenuItemInputToggle.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { forwardRef, } from \"react\";\nimport cn from \"classnames\";\nimport { useIcon } from \"@react-md/icon\";\nimport { ListItem, } from \"@react-md/list\";\nimport { bem } from \"@react-md/utils\";\nimport { InputToggleIcon } from \"../toggle/InputToggleIcon\";\nimport { SwitchTrack } from \"../toggle/SwitchTrack\";\nvar styles = bem(\"rmd-input-toggle-menu-item\");\n/**\n * This is a low-level component that should probably not be used externally and\n * instead the `MenuItemCheckbox`, `MenuItemRadio`, or `MenuItemSwitch` should\n * be used instead.\n *\n * @see {@link MenuItemCheckbox} for checkbox examples\n * @see {@link MenuItemRadio} for radio examples\n * @see {@link MenuItemSwitch} for switch examples\n * @remarks \\@since 2.8.0\n */\nexport var MenuItemInputToggle = forwardRef(function MenuItemInputToggle(_a, ref) {\n    var children = _a.children, _b = _a.tabIndex, tabIndex = _b === void 0 ? -1 : _b, checked = _a.checked, type = _a.type, propIcon = _a.icon, _c = _a.iconAfter, iconAfter = _c === void 0 ? false : _c, addon = _a.addon, addonType = _a.addonType, addonPosition = _a.addonPosition, onClick = _a.onClick, onCheckedChange = _a.onCheckedChange, _d = _a.disabled, disabled = _d === void 0 ? false : _d, className = _a.className, props = __rest(_a, [\"children\", \"tabIndex\", \"checked\", \"type\", \"icon\", \"iconAfter\", \"addon\", \"addonType\", \"addonPosition\", \"onClick\", \"onCheckedChange\", \"disabled\", \"className\"]);\n    var icon = useIcon(type === \"radio\" ? \"radio\" : \"checkbox\", propIcon);\n    if (type === \"switch\" && typeof propIcon === \"undefined\") {\n        icon = React.createElement(SwitchTrack, { checked: checked });\n    }\n    else if (icon && type !== \"switch\") {\n        icon = (React.createElement(\"span\", { className: \"rmd-toggle\" },\n            React.createElement(InputToggleIcon, { circle: type === \"radio\", disabled: disabled, overlay: true, checked: checked }, icon)));\n    }\n    var leftAddon;\n    var leftAddonType;\n    var leftAddonPosition;\n    var rightAddon;\n    var rightAddonType;\n    var rightAddonPosition;\n    if (iconAfter) {\n        leftAddon = addon;\n        leftAddonType = addonType;\n        leftAddonPosition = addonPosition;\n        rightAddon = icon;\n    }\n    else {\n        leftAddon = icon;\n        rightAddon = addon;\n        rightAddonType = addonType;\n        rightAddonPosition = addonPosition;\n    }\n    return (React.createElement(ListItem, __assign({}, props, { disableRipple: true, \"aria-disabled\": disabled || undefined, \"aria-checked\": checked, role: type === \"radio\" ? \"menuitemradio\" : \"menuitemcheckbox\", onClick: function (event) {\n            onClick === null || onClick === void 0 ? void 0 : onClick(event);\n            onCheckedChange(!checked, event);\n        }, ref: ref, className: cn(styles({ switch: type === \"switch\" }), className), tabIndex: tabIndex, leftAddon: leftAddon, leftAddonType: leftAddonType, leftAddonPosition: leftAddonPosition, rightAddon: rightAddon, rightAddonType: rightAddonType, rightAddonPosition: rightAddonPosition }), children));\n});\n/* istanbul ignore next */\nif (process.env.NODE_ENV !== \"production\") {\n    try {\n        var PropTypes = require(\"prop-types\");\n        MenuItemInputToggle.propTypes = {\n            id: PropTypes.string.isRequired,\n            checked: PropTypes.bool.isRequired,\n            onCheckedChange: PropTypes.func.isRequired,\n            type: PropTypes.oneOf([\"checkbox\", \"radio\", \"switch\"]).isRequired,\n            disabled: PropTypes.bool,\n            icon: PropTypes.node,\n            iconAfter: PropTypes.bool,\n            addon: PropTypes.node,\n            addonType: PropTypes.oneOf([\"icon\", \"avatar\", \"media\", \"large-media\"]),\n            addonPosition: PropTypes.oneOf([\"top\", \"middle\", \"bottom\"]),\n        };\n    }\n    catch (e) { }\n}\n//# sourceMappingURL=MenuItemInputToggle.js.map"]},"metadata":{},"sourceType":"module"}