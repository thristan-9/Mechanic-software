{"ast":null,"code":"import { useCallback, useMemo, useRef, useState } from \"react\";\nimport { nearest } from \"@react-md/utils\";\nimport { DEFAULT_SLIDER_MAX, DEFAULT_SLIDER_MIN, DEFAULT_SLIDER_STEP } from \"./constants\";\nimport { getJumpValue, getSteps } from \"./utils\";\n\nvar noop = function () {// do nothing\n};\n/**\n * This hook is used to control the value and behavior of the `Slider`\n * component. The first argument will contain the current slider value while\n * the second argument will be all the props required to control the `Slider`\n * component.\n *\n * @param defaultValue - An optional default value to use for the slider. This\n * will default to the `min` option when undefined.\n * @param options - An object containing the `min` and `max` values allowed for\n * the slider as well as a `step` to indicate valid values between the `min` and\n * `max`.\n * @returns an ordered list containing the current value followed by the\n * `Slider` props\n * @remarks \\@since 2.5.0\n */\n\n\nexport function useSlider(defaultValue, _a) {\n  var _b = _a === void 0 ? {} : _a,\n      _c = _b.min,\n      min = _c === void 0 ? DEFAULT_SLIDER_MIN : _c,\n      _d = _b.max,\n      max = _d === void 0 ? DEFAULT_SLIDER_MAX : _d,\n      _e = _b.step,\n      step = _e === void 0 ? DEFAULT_SLIDER_STEP : _e,\n      propJump = _b.jump,\n      _f = _b.updateOn,\n      updateOn = _f === void 0 ? \"change\" : _f,\n      _g = _b.onChange,\n      onChange = _g === void 0 ? noop : _g;\n\n  var jump = useMemo(function () {\n    return getJumpValue(min, max, step, propJump);\n  }, [min, max, step, propJump]); // since the `currentValue` is a ref, this state is used to force a re-render\n  // to get the updated value from the ref.\n\n  var _h = useState([]),\n      hack = _h[1];\n\n  var _j = useState(defaultValue !== null && defaultValue !== void 0 ? defaultValue : min),\n      value = _j[0],\n      setValue = _j[1];\n\n  var currentValue = useRef(value);\n  var increment = useCallback(function () {\n    setValue(function (prevValue) {\n      return Math.max(min, Math.min(max, prevValue + step));\n    });\n  }, [min, max, step]);\n  var incrementJump = useCallback(function () {\n    setValue(function (prevValue) {\n      return Math.max(min, Math.min(max, prevValue + jump));\n    });\n  }, [min, max, jump]);\n  var decrement = useCallback(function () {\n    setValue(function (prevValue) {\n      return Math.max(min, Math.min(max, prevValue - step));\n    });\n  }, [min, max, step]);\n  var decrementJump = useCallback(function () {\n    setValue(function (prevValue) {\n      return Math.max(min, Math.min(max, prevValue - jump));\n    });\n  }, [min, max, jump]);\n  var minimum = useCallback(function () {\n    setValue(min);\n  }, [min]);\n  var maximum = useCallback(function () {\n    setValue(max);\n  }, [max]);\n  var persist = useCallback(function () {\n    if (currentValue.current === value) {\n      return;\n    }\n\n    onChange(value);\n    currentValue.current = value;\n    hack([]);\n  }, [onChange, value]);\n  var prev = useRef({\n    min: min,\n    max: max,\n    step: step\n  });\n\n  if (prev.current.min !== min || prev.current.max !== max || prev.current.step !== step) {\n    // ensure that if the `min`, `max`, or `step` value changes that the value\n    // is updated as well. Without this, there will be a runtime error if the\n    // value is not within the new range.\n    prev.current = {\n      min: min,\n      max: max,\n      step: step\n    };\n    var nextValue = nearest(value, min, max, getSteps(min, max, step));\n    currentValue.current = nextValue;\n    setValue(nextValue);\n  }\n\n  if (updateOn === \"change\" && currentValue.current !== value) {\n    currentValue.current = value;\n  }\n\n  return [currentValue.current, {\n    min: min,\n    max: max,\n    step: step,\n    value: value,\n    increment: increment,\n    incrementJump: incrementJump,\n    decrement: decrement,\n    decrementJump: decrementJump,\n    minimum: minimum,\n    maximum: maximum,\n    persist: persist,\n    setValue: setValue\n  }];\n}","map":{"version":3,"sources":["../../src/slider/useSlider.ts"],"names":[],"mappings":"AAAA,SAAS,WAAT,EAAsB,OAAtB,EAA+B,MAA/B,EAAuC,QAAvC,QAAuD,OAAvD;AACA,SAAS,OAAT,QAAwB,iBAAxB;AAEA,SACE,kBADF,EAEE,kBAFF,EAGE,mBAHF,QAIO,aAJP;AAYA,SAAS,YAAT,EAAuB,QAAvB,QAAuC,SAAvC;;AAcA,IAAM,IAAI,GAAG,YAAA,CACX;AACD,CAFD;AAsBA;;;;;;;;;;;;;;AAcG;;;AACH,OAAM,SAAU,SAAV,CACJ,YADI,EAEJ,EAFI,EASoB;MAPxB,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAOsB,EAPtB,GAOwB,E;MANtB,EAAA,GAAA,EAAA,CAAA,G;MAAA,GAAG,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,kBAAH,GAAqB,E;MACxB,EAAA,GAAA,EAAA,CAAA,G;MAAA,GAAG,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,kBAAH,GAAqB,E;MACxB,EAAA,GAAA,EAAA,CAAA,I;MAAA,IAAI,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,mBAAH,GAAsB,E;MACpB,QAAQ,GAAA,EAAA,CAAA,I;MACd,EAAA,GAAA,EAAA,CAAA,Q;MAAA,QAAQ,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,QAAH,GAAW,E;MACnB,EAAA,GAAA,EAAA,CAAA,Q;MAAA,QAAQ,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,IAAH,GAAO,E;;AAGjB,MAAM,IAAI,GAAG,OAAO,CAAC,YAAA;AAAM,WAAA,YAAY,CAAC,GAAD,EAAM,GAAN,EAAW,IAAX,EAAZ,QAAY,CAAZ;AAAsC,GAA7C,EAA+C,CACjE,GADiE,EAEjE,GAFiE,EAGjE,IAHiE,EAIjE,QAJiE,CAA/C,CAApB,CAFwB,CASxB;AACA;;AACM,MAAA,EAAA,GAAW,QAAQ,CAAC,EAAD,CAAnB;AAAA,MAAG,IAAI,GAAA,EAAA,CAAA,CAAA,CAAP;;AACA,MAAA,EAAA,GAAoB,QAAQ,CAAC,YAAY,KAAA,IAAZ,IAAA,YAAY,KAAA,KAAA,CAAZ,GAAA,YAAA,GAAgB,GAAjB,CAA5B;AAAA,MAAC,KAAK,GAAA,EAAA,CAAA,CAAA,CAAN;AAAA,MAAQ,QAAQ,GAAA,EAAA,CAAA,CAAA,CAAhB;;AACN,MAAM,YAAY,GAAG,MAAM,CAAC,KAAD,CAA3B;AAEA,MAAM,SAAS,GAAG,WAAW,CAAC,YAAA;AAC5B,IAAA,QAAQ,CAAC,UAAC,SAAD,EAAU;AAAK,aAAA,IAAI,CAAC,GAAL,CAAS,GAAT,EAAc,IAAI,CAAC,GAAL,CAAS,GAAT,EAAc,SAAS,GAArC,IAAc,CAAd,CAAA;AAA8C,KAA9D,CAAR;AACD,GAF4B,EAE1B,CAAC,GAAD,EAAM,GAAN,EAAW,IAAX,CAF0B,CAA7B;AAGA,MAAM,aAAa,GAAG,WAAW,CAAC,YAAA;AAChC,IAAA,QAAQ,CAAC,UAAC,SAAD,EAAU;AAAK,aAAA,IAAI,CAAC,GAAL,CAAS,GAAT,EAAc,IAAI,CAAC,GAAL,CAAS,GAAT,EAAc,SAAS,GAArC,IAAc,CAAd,CAAA;AAA8C,KAA9D,CAAR;AACD,GAFgC,EAE9B,CAAC,GAAD,EAAM,GAAN,EAAW,IAAX,CAF8B,CAAjC;AAGA,MAAM,SAAS,GAAG,WAAW,CAAC,YAAA;AAC5B,IAAA,QAAQ,CAAC,UAAC,SAAD,EAAU;AAAK,aAAA,IAAI,CAAC,GAAL,CAAS,GAAT,EAAc,IAAI,CAAC,GAAL,CAAS,GAAT,EAAc,SAAS,GAArC,IAAc,CAAd,CAAA;AAA8C,KAA9D,CAAR;AACD,GAF4B,EAE1B,CAAC,GAAD,EAAM,GAAN,EAAW,IAAX,CAF0B,CAA7B;AAGA,MAAM,aAAa,GAAG,WAAW,CAAC,YAAA;AAChC,IAAA,QAAQ,CAAC,UAAC,SAAD,EAAU;AAAK,aAAA,IAAI,CAAC,GAAL,CAAS,GAAT,EAAc,IAAI,CAAC,GAAL,CAAS,GAAT,EAAc,SAAS,GAArC,IAAc,CAAd,CAAA;AAA8C,KAA9D,CAAR;AACD,GAFgC,EAE9B,CAAC,GAAD,EAAM,GAAN,EAAW,IAAX,CAF8B,CAAjC;AAGA,MAAM,OAAO,GAAG,WAAW,CAAC,YAAA;AAC1B,IAAA,QAAQ,CAAC,GAAD,CAAR;AACD,GAF0B,EAExB,CAAC,GAAD,CAFwB,CAA3B;AAGA,MAAM,OAAO,GAAG,WAAW,CAAC,YAAA;AAC1B,IAAA,QAAQ,CAAC,GAAD,CAAR;AACD,GAF0B,EAExB,CAAC,GAAD,CAFwB,CAA3B;AAIA,MAAM,OAAO,GAAG,WAAW,CAAC,YAAA;AAC1B,QAAI,YAAY,CAAC,OAAb,KAAyB,KAA7B,EAAoC;AAClC;AACD;;AAED,IAAA,QAAQ,CAAC,KAAD,CAAR;AACA,IAAA,YAAY,CAAC,OAAb,GAAuB,KAAvB;AACA,IAAA,IAAI,CAAC,EAAD,CAAJ;AACD,GAR0B,EAQxB,CAAC,QAAD,EAAW,KAAX,CARwB,CAA3B;AAUA,MAAM,IAAI,GAAG,MAAM,CAAC;AAAE,IAAA,GAAG,EAAA,GAAL;AAAO,IAAA,GAAG,EAAA,GAAV;AAAY,IAAA,IAAI,EAAA;AAAhB,GAAD,CAAnB;;AACA,MACE,IAAI,CAAC,OAAL,CAAa,GAAb,KAAqB,GAArB,IACA,IAAI,CAAC,OAAL,CAAa,GAAb,KAAqB,GADrB,IAEA,IAAI,CAAC,OAAL,CAAa,IAAb,KAAsB,IAHxB,EAIE;AACA;AACA;AACA;AACA,IAAA,IAAI,CAAC,OAAL,GAAe;AAAE,MAAA,GAAG,EAAA,GAAL;AAAO,MAAA,GAAG,EAAA,GAAV;AAAY,MAAA,IAAI,EAAA;AAAhB,KAAf;AACA,QAAM,SAAS,GAAG,OAAO,CAAC,KAAD,EAAQ,GAAR,EAAa,GAAb,EAAkB,QAAQ,CAAC,GAAD,EAAM,GAAN,EAAW,IAAX,CAA1B,CAAzB;AACA,IAAA,YAAY,CAAC,OAAb,GAAuB,SAAvB;AACA,IAAA,QAAQ,CAAC,SAAD,CAAR;AACD;;AAED,MAAI,QAAQ,KAAK,QAAb,IAAyB,YAAY,CAAC,OAAb,KAAyB,KAAtD,EAA6D;AAC3D,IAAA,YAAY,CAAC,OAAb,GAAuB,KAAvB;AACD;;AAED,SAAO,CACL,YAAY,CAAC,OADR,EAEL;AACE,IAAA,GAAG,EAAA,GADL;AAEE,IAAA,GAAG,EAAA,GAFL;AAGE,IAAA,IAAI,EAAA,IAHN;AAIE,IAAA,KAAK,EAAA,KAJP;AAKE,IAAA,SAAS,EAAA,SALX;AAME,IAAA,aAAa,EAAA,aANf;AAOE,IAAA,SAAS,EAAA,SAPX;AAQE,IAAA,aAAa,EAAA,aARf;AASE,IAAA,OAAO,EAAA,OATT;AAUE,IAAA,OAAO,EAAA,OAVT;AAWE,IAAA,OAAO,EAAA,OAXT;AAYE,IAAA,QAAQ,EAAA;AAZV,GAFK,CAAP;AAiBD","sourceRoot":"","sourcesContent":["import { useCallback, useMemo, useRef, useState } from \"react\";\nimport { nearest } from \"@react-md/utils\";\nimport { DEFAULT_SLIDER_MAX, DEFAULT_SLIDER_MIN, DEFAULT_SLIDER_STEP, } from \"./constants\";\nimport { getJumpValue, getSteps } from \"./utils\";\nvar noop = function () {\n    // do nothing\n};\n/**\n * This hook is used to control the value and behavior of the `Slider`\n * component. The first argument will contain the current slider value while\n * the second argument will be all the props required to control the `Slider`\n * component.\n *\n * @param defaultValue - An optional default value to use for the slider. This\n * will default to the `min` option when undefined.\n * @param options - An object containing the `min` and `max` values allowed for\n * the slider as well as a `step` to indicate valid values between the `min` and\n * `max`.\n * @returns an ordered list containing the current value followed by the\n * `Slider` props\n * @remarks \\@since 2.5.0\n */\nexport function useSlider(defaultValue, _a) {\n    var _b = _a === void 0 ? {} : _a, _c = _b.min, min = _c === void 0 ? DEFAULT_SLIDER_MIN : _c, _d = _b.max, max = _d === void 0 ? DEFAULT_SLIDER_MAX : _d, _e = _b.step, step = _e === void 0 ? DEFAULT_SLIDER_STEP : _e, propJump = _b.jump, _f = _b.updateOn, updateOn = _f === void 0 ? \"change\" : _f, _g = _b.onChange, onChange = _g === void 0 ? noop : _g;\n    var jump = useMemo(function () { return getJumpValue(min, max, step, propJump); }, [\n        min,\n        max,\n        step,\n        propJump,\n    ]);\n    // since the `currentValue` is a ref, this state is used to force a re-render\n    // to get the updated value from the ref.\n    var _h = useState([]), hack = _h[1];\n    var _j = useState(defaultValue !== null && defaultValue !== void 0 ? defaultValue : min), value = _j[0], setValue = _j[1];\n    var currentValue = useRef(value);\n    var increment = useCallback(function () {\n        setValue(function (prevValue) { return Math.max(min, Math.min(max, prevValue + step)); });\n    }, [min, max, step]);\n    var incrementJump = useCallback(function () {\n        setValue(function (prevValue) { return Math.max(min, Math.min(max, prevValue + jump)); });\n    }, [min, max, jump]);\n    var decrement = useCallback(function () {\n        setValue(function (prevValue) { return Math.max(min, Math.min(max, prevValue - step)); });\n    }, [min, max, step]);\n    var decrementJump = useCallback(function () {\n        setValue(function (prevValue) { return Math.max(min, Math.min(max, prevValue - jump)); });\n    }, [min, max, jump]);\n    var minimum = useCallback(function () {\n        setValue(min);\n    }, [min]);\n    var maximum = useCallback(function () {\n        setValue(max);\n    }, [max]);\n    var persist = useCallback(function () {\n        if (currentValue.current === value) {\n            return;\n        }\n        onChange(value);\n        currentValue.current = value;\n        hack([]);\n    }, [onChange, value]);\n    var prev = useRef({ min: min, max: max, step: step });\n    if (prev.current.min !== min ||\n        prev.current.max !== max ||\n        prev.current.step !== step) {\n        // ensure that if the `min`, `max`, or `step` value changes that the value\n        // is updated as well. Without this, there will be a runtime error if the\n        // value is not within the new range.\n        prev.current = { min: min, max: max, step: step };\n        var nextValue = nearest(value, min, max, getSteps(min, max, step));\n        currentValue.current = nextValue;\n        setValue(nextValue);\n    }\n    if (updateOn === \"change\" && currentValue.current !== value) {\n        currentValue.current = value;\n    }\n    return [\n        currentValue.current,\n        {\n            min: min,\n            max: max,\n            step: step,\n            value: value,\n            increment: increment,\n            incrementJump: incrementJump,\n            decrement: decrement,\n            decrementJump: decrementJump,\n            minimum: minimum,\n            maximum: maximum,\n            persist: persist,\n            setValue: setValue,\n        },\n    ];\n}\n//# sourceMappingURL=useSlider.js.map"]},"metadata":{},"sourceType":"module"}